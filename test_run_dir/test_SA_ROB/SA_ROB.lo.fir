circuit SA_ROB :
  module SA_ROB :
    input clock : Clock
    input reset : UInt<1>
    input io_MatchVec_0 : UInt<6>
    input io_MatchVec_1 : UInt<6>
    input io_MatchVec_2 : UInt<6>
    input io_MatchVec_3 : UInt<6>
    input io_data_0 : UInt<64>
    input io_data_1 : UInt<64>
    input io_data_2 : UInt<64>
    input io_data_3 : UInt<64>
    input io_out_ready : UInt<1>
    output io_out_valid : UInt<1>
    output io_out_bits : UInt<64>

    reg writePtr : UInt<2>, clock with :
      reset => (UInt<1>("h0"), writePtr) @[matu.scala 233:25]
    node _writePtrP1_T = add(writePtr, UInt<3>("h1")) @[matu.scala 234:36]
    node _writePtrP1_T_1 = tail(_writePtrP1_T, 1) @[matu.scala 234:36]
    node _writePtrP2_T = add(writePtr, UInt<3>("h2")) @[matu.scala 235:36]
    node _writePtrP2_T_1 = tail(_writePtrP2_T, 1) @[matu.scala 235:36]
    node _writePtrP3_T = add(writePtr, UInt<3>("h3")) @[matu.scala 236:36]
    node _writePtrP3_T_1 = tail(_writePtrP3_T, 1) @[matu.scala 236:36]
    reg mem_0 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), mem_0) @[matu.scala 237:20]
    reg mem_1 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), mem_1) @[matu.scala 237:20]
    reg mem_2 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), mem_2) @[matu.scala 237:20]
    reg mem_3 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), mem_3) @[matu.scala 237:20]
    node _matchVecORR_T = orr(io_MatchVec_3) @[matu.scala 238:40]
    node _matchVecORR_T_1 = orr(io_MatchVec_2) @[matu.scala 238:60]
    node _matchVecORR_T_2 = orr(io_MatchVec_1) @[matu.scala 238:80]
    node _matchVecORR_T_3 = orr(io_MatchVec_0) @[matu.scala 238:100]
    node matchVecORR_lo = cat(_matchVecORR_T_2, _matchVecORR_T_3) @[Cat.scala 33:92]
    node matchVecORR_hi = cat(_matchVecORR_T, _matchVecORR_T_1) @[Cat.scala 33:92]
    node matchVecORR = cat(matchVecORR_hi, matchVecORR_lo) @[Cat.scala 33:92]
    reg matchVecReg_0 : UInt<6>, clock with :
      reset => (UInt<1>("h0"), matchVecReg_0) @[matu.scala 239:28]
    reg matchVecReg_1 : UInt<6>, clock with :
      reset => (UInt<1>("h0"), matchVecReg_1) @[matu.scala 239:28]
    reg matchVecReg_2 : UInt<6>, clock with :
      reset => (UInt<1>("h0"), matchVecReg_2) @[matu.scala 239:28]
    reg matchVecReg_3 : UInt<6>, clock with :
      reset => (UInt<1>("h0"), matchVecReg_3) @[matu.scala 239:28]
    reg matchVecMask_0 : UInt<6>, clock with :
      reset => (UInt<1>("h0"), matchVecMask_0) @[matu.scala 240:29]
    reg matchVecMask_1 : UInt<6>, clock with :
      reset => (UInt<1>("h0"), matchVecMask_1) @[matu.scala 240:29]
    reg matchVecMask_2 : UInt<6>, clock with :
      reset => (UInt<1>("h0"), matchVecMask_2) @[matu.scala 240:29]
    reg matchVecMask_3 : UInt<6>, clock with :
      reset => (UInt<1>("h0"), matchVecMask_3) @[matu.scala 240:29]
    node _io_out_valid_T = orr(matchVecReg_3) @[matu.scala 248:38]
    node _io_out_valid_T_1 = orr(matchVecReg_2) @[matu.scala 248:58]
    node _io_out_valid_T_2 = orr(matchVecReg_1) @[matu.scala 248:78]
    node _io_out_valid_T_3 = orr(matchVecReg_0) @[matu.scala 248:98]
    node io_out_valid_lo = cat(_io_out_valid_T_2, _io_out_valid_T_3) @[Cat.scala 33:92]
    node io_out_valid_hi = cat(_io_out_valid_T, _io_out_valid_T_1) @[Cat.scala 33:92]
    node _io_out_valid_T_4 = cat(io_out_valid_hi, io_out_valid_lo) @[Cat.scala 33:92]
    node _io_out_valid_T_5 = orr(_io_out_valid_T_4) @[matu.scala 248:103]
    node _T = eq(matchVecReg_0, UInt<1>("h0")) @[matu.scala 276:25]
    node _minMask_0_1_T = gt(matchVecMask_0, matchVecMask_1) @[matu.scala 293:38]
    node _minMask_0_1_T_1 = mux(_minMask_0_1_T, matchVecMask_1, matchVecMask_0) @[matu.scala 293:21]
    node minMask_0_1 = _minMask_0_1_T_1 @[matu.scala 243:25 293:15]
    node _minMask_2_3_T = gt(matchVecMask_2, matchVecMask_3) @[matu.scala 294:38]
    node _minMask_2_3_T_1 = mux(_minMask_2_3_T, matchVecMask_3, matchVecMask_2) @[matu.scala 294:21]
    node minMask_2_3 = _minMask_2_3_T_1 @[matu.scala 244:25 294:15]
    node _minMask_T = gt(minMask_0_1, minMask_2_3) @[matu.scala 295:30]
    node _minMask_T_1 = mux(_minMask_T, minMask_2_3, minMask_0_1) @[matu.scala 295:17]
    node minMask = _minMask_T_1 @[matu.scala 242:21 295:11]
    node _T_31 = eq(minMask, matchVecMask_3) @[matu.scala 297:18]
    node _T_30 = eq(minMask, matchVecMask_2) @[matu.scala 297:18]
    node _T_29 = eq(minMask, matchVecMask_1) @[matu.scala 297:18]
    node _T_28 = eq(minMask, matchVecMask_0) @[matu.scala 297:18]
    node _GEN_16 = mux(_T_28, UInt<1>("h0"), UInt<2>("h0")) @[matu.scala 297:38 298:15]
    node _GEN_17 = mux(_T_29, UInt<1>("h1"), _GEN_16) @[matu.scala 297:38 298:15]
    node _GEN_18 = mux(_T_30, UInt<2>("h2"), _GEN_17) @[matu.scala 297:38 298:15]
    node _GEN_19 = mux(_T_31, UInt<2>("h3"), _GEN_18) @[matu.scala 297:38 298:15]
    node minIndex = _GEN_19
    node _T_1 = eq(minIndex, UInt<1>("h0")) @[matu.scala 276:45]
    node _T_2 = or(_T, _T_1) @[matu.scala 276:33]
    node _GEN_0 = mux(_T_2, io_MatchVec_0, matchVecReg_0) @[matu.scala 276:54 277:22 239:28]
    node _GEN_1 = mux(_T_2, io_data_0, mem_0) @[matu.scala 276:54 278:14 237:20]
    node _T_3 = eq(matchVecReg_1, UInt<1>("h0")) @[matu.scala 276:25]
    node _T_4 = eq(minIndex, UInt<1>("h1")) @[matu.scala 276:45]
    node _T_5 = or(_T_3, _T_4) @[matu.scala 276:33]
    node _GEN_2 = mux(_T_5, io_MatchVec_1, matchVecReg_1) @[matu.scala 276:54 277:22 239:28]
    node _GEN_3 = mux(_T_5, io_data_1, mem_1) @[matu.scala 276:54 278:14 237:20]
    node _T_6 = eq(matchVecReg_2, UInt<1>("h0")) @[matu.scala 276:25]
    node _T_7 = eq(minIndex, UInt<2>("h2")) @[matu.scala 276:45]
    node _T_8 = or(_T_6, _T_7) @[matu.scala 276:33]
    node _GEN_4 = mux(_T_8, io_MatchVec_2, matchVecReg_2) @[matu.scala 276:54 277:22 239:28]
    node _GEN_5 = mux(_T_8, io_data_2, mem_2) @[matu.scala 276:54 278:14 237:20]
    node _T_9 = eq(matchVecReg_3, UInt<1>("h0")) @[matu.scala 276:25]
    node _T_10 = eq(minIndex, UInt<2>("h3")) @[matu.scala 276:45]
    node _T_11 = or(_T_9, _T_10) @[matu.scala 276:33]
    node _GEN_6 = mux(_T_11, io_MatchVec_3, matchVecReg_3) @[matu.scala 276:54 277:22 239:28]
    node _GEN_7 = mux(_T_11, io_data_3, mem_3) @[matu.scala 276:54 278:14 237:20]
    node _T_12 = eq(io_MatchVec_0, UInt<1>("h0")) @[matu.scala 284:25]
    node _T_13 = eq(matchVecReg_0, UInt<1>("h0")) @[matu.scala 284:51]
    node _T_14 = and(_T_12, _T_13) @[matu.scala 284:33]
    node _matchVecMask_0_T = not(io_MatchVec_0) @[matu.scala 285:26]
    node _T_15 = eq(matchVecReg_0, UInt<1>("h0")) @[matu.scala 286:31]
    node _GEN_8 = mux(_T_15, io_MatchVec_0, matchVecMask_0) @[matu.scala 286:40 287:23 240:29]
    node _GEN_9 = mux(_T_14, _matchVecMask_0_T, _GEN_8) @[matu.scala 284:60 285:23]
    node _T_16 = eq(io_MatchVec_1, UInt<1>("h0")) @[matu.scala 284:25]
    node _T_17 = eq(matchVecReg_1, UInt<1>("h0")) @[matu.scala 284:51]
    node _T_18 = and(_T_16, _T_17) @[matu.scala 284:33]
    node _matchVecMask_1_T = not(io_MatchVec_1) @[matu.scala 285:26]
    node _T_19 = eq(matchVecReg_1, UInt<1>("h0")) @[matu.scala 286:31]
    node _GEN_10 = mux(_T_19, io_MatchVec_1, matchVecMask_1) @[matu.scala 286:40 287:23 240:29]
    node _GEN_11 = mux(_T_18, _matchVecMask_1_T, _GEN_10) @[matu.scala 284:60 285:23]
    node _T_20 = eq(io_MatchVec_2, UInt<1>("h0")) @[matu.scala 284:25]
    node _T_21 = eq(matchVecReg_2, UInt<1>("h0")) @[matu.scala 284:51]
    node _T_22 = and(_T_20, _T_21) @[matu.scala 284:33]
    node _matchVecMask_2_T = not(io_MatchVec_2) @[matu.scala 285:26]
    node _T_23 = eq(matchVecReg_2, UInt<1>("h0")) @[matu.scala 286:31]
    node _GEN_12 = mux(_T_23, io_MatchVec_2, matchVecMask_2) @[matu.scala 286:40 287:23 240:29]
    node _GEN_13 = mux(_T_22, _matchVecMask_2_T, _GEN_12) @[matu.scala 284:60 285:23]
    node _T_24 = eq(io_MatchVec_3, UInt<1>("h0")) @[matu.scala 284:25]
    node _T_25 = eq(matchVecReg_3, UInt<1>("h0")) @[matu.scala 284:51]
    node _T_26 = and(_T_24, _T_25) @[matu.scala 284:33]
    node _matchVecMask_3_T = not(io_MatchVec_3) @[matu.scala 285:26]
    node _T_27 = eq(matchVecReg_3, UInt<1>("h0")) @[matu.scala 286:31]
    node _GEN_14 = mux(_T_27, io_MatchVec_3, matchVecMask_3) @[matu.scala 286:40 287:23 240:29]
    node _GEN_15 = mux(_T_26, _matchVecMask_3_T, _GEN_14) @[matu.scala 284:60 285:23]
    node _GEN_20 = validif(eq(UInt<1>("h0"), minIndex), matchVecReg_0) @[matu.scala 302:{31,31}]
    node _GEN_21 = mux(eq(UInt<1>("h1"), minIndex), matchVecReg_1, _GEN_20) @[matu.scala 302:{31,31}]
    node _GEN_22 = mux(eq(UInt<2>("h2"), minIndex), matchVecReg_2, _GEN_21) @[matu.scala 302:{31,31}]
    node _GEN_23 = mux(eq(UInt<2>("h3"), minIndex), matchVecReg_3, _GEN_22) @[matu.scala 302:{31,31}]
    node _matchVecReg_minIndex = _GEN_23 @[matu.scala 302:31]
    node _T_32 = gt(_matchVecReg_minIndex, UInt<1>("h0")) @[matu.scala 302:31]
    node _matchVecReg_minIndex_0 = UInt<6>("h0") @[matu.scala 303:{27,27}]
    node _GEN_24 = mux(eq(UInt<1>("h0"), minIndex), _matchVecReg_minIndex_0, _GEN_0) @[matu.scala 303:{27,27}]
    node _GEN_25 = mux(eq(UInt<1>("h1"), minIndex), _matchVecReg_minIndex_0, _GEN_2) @[matu.scala 303:{27,27}]
    node _GEN_26 = mux(eq(UInt<2>("h2"), minIndex), _matchVecReg_minIndex_0, _GEN_4) @[matu.scala 303:{27,27}]
    node _GEN_27 = mux(eq(UInt<2>("h3"), minIndex), _matchVecReg_minIndex_0, _GEN_6) @[matu.scala 303:{27,27}]
    node _GEN_28 = mux(_T_32, _GEN_24, _GEN_0) @[matu.scala 302:38]
    node _GEN_29 = mux(_T_32, _GEN_25, _GEN_2) @[matu.scala 302:38]
    node _GEN_30 = mux(_T_32, _GEN_26, _GEN_4) @[matu.scala 302:38]
    node _GEN_31 = mux(_T_32, _GEN_27, _GEN_6) @[matu.scala 302:38]
    node _GEN_32 = validif(eq(UInt<1>("h0"), minIndex), matchVecMask_0) @[matu.scala 305:{32,32}]
    node _GEN_33 = mux(eq(UInt<1>("h1"), minIndex), matchVecMask_1, _GEN_32) @[matu.scala 305:{32,32}]
    node _GEN_34 = mux(eq(UInt<2>("h2"), minIndex), matchVecMask_2, _GEN_33) @[matu.scala 305:{32,32}]
    node _GEN_35 = mux(eq(UInt<2>("h3"), minIndex), matchVecMask_3, _GEN_34) @[matu.scala 305:{32,32}]
    node _matchVecMask_minIndex = _GEN_35 @[matu.scala 305:32]
    node _T_33 = lt(_matchVecMask_minIndex, UInt<6>("h3f")) @[matu.scala 305:32]
    node _matchVecMask_minIndex_0 = UInt<6>("h3f") @[matu.scala 306:{28,28}]
    node _GEN_36 = mux(eq(UInt<1>("h0"), minIndex), _matchVecMask_minIndex_0, _GEN_9) @[matu.scala 306:{28,28}]
    node _GEN_37 = mux(eq(UInt<1>("h1"), minIndex), _matchVecMask_minIndex_0, _GEN_11) @[matu.scala 306:{28,28}]
    node _GEN_38 = mux(eq(UInt<2>("h2"), minIndex), _matchVecMask_minIndex_0, _GEN_13) @[matu.scala 306:{28,28}]
    node _GEN_39 = mux(eq(UInt<2>("h3"), minIndex), _matchVecMask_minIndex_0, _GEN_15) @[matu.scala 306:{28,28}]
    node _GEN_40 = mux(_T_33, _GEN_36, _GEN_9) @[matu.scala 305:40]
    node _GEN_41 = mux(_T_33, _GEN_37, _GEN_11) @[matu.scala 305:40]
    node _GEN_42 = mux(_T_33, _GEN_38, _GEN_13) @[matu.scala 305:40]
    node _GEN_43 = mux(_T_33, _GEN_39, _GEN_15) @[matu.scala 305:40]
    node _deq_T = orr(matchVecReg_3) @[matu.scala 309:29]
    node _deq_T_1 = orr(matchVecReg_2) @[matu.scala 309:49]
    node _deq_T_2 = orr(matchVecReg_1) @[matu.scala 309:69]
    node _deq_T_3 = orr(matchVecReg_0) @[matu.scala 309:89]
    node deq_lo = cat(_deq_T_2, _deq_T_3) @[Cat.scala 33:92]
    node deq_hi = cat(_deq_T, _deq_T_1) @[Cat.scala 33:92]
    node _deq_T_4 = cat(deq_hi, deq_lo) @[Cat.scala 33:92]
    node _deq_T_5 = orr(_deq_T_4) @[matu.scala 309:94]
    node _deq_T_6 = and(_deq_T_5, io_out_ready) @[matu.scala 309:98]
    node _GEN_44 = validif(eq(UInt<1>("h0"), minIndex), mem_0) @[matu.scala 312:{13,13}]
    node _GEN_45 = mux(eq(UInt<1>("h1"), minIndex), mem_1, _GEN_44) @[matu.scala 312:{13,13}]
    node _GEN_46 = mux(eq(UInt<2>("h2"), minIndex), mem_2, _GEN_45) @[matu.scala 312:{13,13}]
    node _GEN_47 = mux(eq(UInt<2>("h3"), minIndex), mem_3, _GEN_46) @[matu.scala 312:{13,13}]
    node deq = _deq_T_6
    node _mem_minIndex = _GEN_47 @[matu.scala 312:13]
    node _GEN_48 = mux(deq, _mem_minIndex, UInt<64>("h0")) @[matu.scala 311:13 312:13]
    node isEmpty = UInt<1>("h0")
    node writePtrP1 = _writePtrP1_T_1
    node writePtrP2 = _writePtrP2_T_1
    node writePtrP3 = _writePtrP3_T_1
    node _mem_WIRE_0 = UInt<64>("h0") @[matu.scala 237:{28,28}]
    node _mem_WIRE_1 = UInt<64>("h0") @[matu.scala 237:{28,28}]
    node _mem_WIRE_2 = UInt<64>("h0") @[matu.scala 237:{28,28}]
    node _mem_WIRE_3 = UInt<64>("h0") @[matu.scala 237:{28,28}]
    node _matchVecReg_WIRE_0 = UInt<6>("h0") @[matu.scala 239:{36,36}]
    node _matchVecReg_WIRE_1 = UInt<6>("h0") @[matu.scala 239:{36,36}]
    node _matchVecReg_WIRE_2 = UInt<6>("h0") @[matu.scala 239:{36,36}]
    node _matchVecReg_WIRE_3 = UInt<6>("h0") @[matu.scala 239:{36,36}]
    node _matchVecMask_WIRE_0 = UInt<6>("h3f") @[matu.scala 240:{37,37}]
    node _matchVecMask_WIRE_1 = UInt<6>("h3f") @[matu.scala 240:{37,37}]
    node _matchVecMask_WIRE_2 = UInt<6>("h3f") @[matu.scala 240:{37,37}]
    node _matchVecMask_WIRE_3 = UInt<6>("h3f") @[matu.scala 240:{37,37}]
    node deqData = _GEN_48
    io_out_valid <= _io_out_valid_T_5 @[matu.scala 248:16]
    io_out_bits <= deqData @[matu.scala 247:15]
    writePtr <= mux(reset, UInt<2>("h0"), writePtr) @[matu.scala 233:{25,25,25}]
    mem_0 <= mux(reset, _mem_WIRE_0, _GEN_1) @[matu.scala 237:{20,20}]
    mem_1 <= mux(reset, _mem_WIRE_1, _GEN_3) @[matu.scala 237:{20,20}]
    mem_2 <= mux(reset, _mem_WIRE_2, _GEN_5) @[matu.scala 237:{20,20}]
    mem_3 <= mux(reset, _mem_WIRE_3, _GEN_7) @[matu.scala 237:{20,20}]
    matchVecReg_0 <= mux(reset, _matchVecReg_WIRE_0, _GEN_28) @[matu.scala 239:{28,28}]
    matchVecReg_1 <= mux(reset, _matchVecReg_WIRE_1, _GEN_29) @[matu.scala 239:{28,28}]
    matchVecReg_2 <= mux(reset, _matchVecReg_WIRE_2, _GEN_30) @[matu.scala 239:{28,28}]
    matchVecReg_3 <= mux(reset, _matchVecReg_WIRE_3, _GEN_31) @[matu.scala 239:{28,28}]
    matchVecMask_0 <= mux(reset, _matchVecMask_WIRE_0, _GEN_40) @[matu.scala 240:{29,29}]
    matchVecMask_1 <= mux(reset, _matchVecMask_WIRE_1, _GEN_41) @[matu.scala 240:{29,29}]
    matchVecMask_2 <= mux(reset, _matchVecMask_WIRE_2, _GEN_42) @[matu.scala 240:{29,29}]
    matchVecMask_3 <= mux(reset, _matchVecMask_WIRE_3, _GEN_43) @[matu.scala 240:{29,29}]
