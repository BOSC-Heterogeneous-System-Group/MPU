circuit wallaceTree :
  module RCA :
    input clock : Clock
    input reset : UInt<1>
    input input_a_in : UInt<16>
    input input_b_in : UInt<16>
    input input_c_in : UInt<1>
    output output_S : UInt<16>
    output output_C : UInt<16>

    node _c_comb_0_T = bits(input_c_in, 0, 0) @[rca.scala 27:29]
    node _g_comb_0_T = bits(input_a_in, 0, 0) @[rca.scala 30:35]
    node _g_comb_0_T_1 = bits(input_b_in, 0, 0) @[rca.scala 30:51]
    node _g_comb_0_T_2 = and(_g_comb_0_T, _g_comb_0_T_1) @[rca.scala 30:39]
    node _g_comb_0_T_3 = bits(_g_comb_0_T_2, 0, 0) @[rca.scala 30:56]
    node _p_comb_0_T = bits(input_a_in, 0, 0) @[rca.scala 31:35]
    node _p_comb_0_T_1 = bits(input_b_in, 0, 0) @[rca.scala 31:51]
    node _p_comb_0_T_2 = xor(_p_comb_0_T, _p_comb_0_T_1) @[rca.scala 31:39]
    node _p_comb_0_T_3 = bits(_p_comb_0_T_2, 0, 0) @[rca.scala 31:56]
    node p_comb_0 = _p_comb_0_T_3 @[rca.scala 23:22 31:21]
    node c_comb_0 = _c_comb_0_T @[rca.scala 25:22 27:15]
    node _s_comb_0_T = xor(p_comb_0, c_comb_0) @[rca.scala 32:34]
    node _c_comb_1_T = and(c_comb_0, p_comb_0) @[rca.scala 33:34]
    node g_comb_0 = _g_comb_0_T_3 @[rca.scala 22:22 30:21]
    node _c_comb_1_T_1 = or(_c_comb_1_T, g_comb_0) @[rca.scala 33:46]
    node _g_comb_1_T = bits(input_a_in, 1, 1) @[rca.scala 30:35]
    node _g_comb_1_T_1 = bits(input_b_in, 1, 1) @[rca.scala 30:51]
    node _g_comb_1_T_2 = and(_g_comb_1_T, _g_comb_1_T_1) @[rca.scala 30:39]
    node _g_comb_1_T_3 = bits(_g_comb_1_T_2, 0, 0) @[rca.scala 30:56]
    node _p_comb_1_T = bits(input_a_in, 1, 1) @[rca.scala 31:35]
    node _p_comb_1_T_1 = bits(input_b_in, 1, 1) @[rca.scala 31:51]
    node _p_comb_1_T_2 = xor(_p_comb_1_T, _p_comb_1_T_1) @[rca.scala 31:39]
    node _p_comb_1_T_3 = bits(_p_comb_1_T_2, 0, 0) @[rca.scala 31:56]
    node p_comb_1 = _p_comb_1_T_3 @[rca.scala 23:22 31:21]
    node c_comb_1 = _c_comb_1_T_1 @[rca.scala 25:22 33:21]
    node _s_comb_1_T = xor(p_comb_1, c_comb_1) @[rca.scala 32:34]
    node _c_comb_2_T = and(c_comb_1, p_comb_1) @[rca.scala 33:34]
    node g_comb_1 = _g_comb_1_T_3 @[rca.scala 22:22 30:21]
    node _c_comb_2_T_1 = or(_c_comb_2_T, g_comb_1) @[rca.scala 33:46]
    node _g_comb_2_T = bits(input_a_in, 2, 2) @[rca.scala 30:35]
    node _g_comb_2_T_1 = bits(input_b_in, 2, 2) @[rca.scala 30:51]
    node _g_comb_2_T_2 = and(_g_comb_2_T, _g_comb_2_T_1) @[rca.scala 30:39]
    node _g_comb_2_T_3 = bits(_g_comb_2_T_2, 0, 0) @[rca.scala 30:56]
    node _p_comb_2_T = bits(input_a_in, 2, 2) @[rca.scala 31:35]
    node _p_comb_2_T_1 = bits(input_b_in, 2, 2) @[rca.scala 31:51]
    node _p_comb_2_T_2 = xor(_p_comb_2_T, _p_comb_2_T_1) @[rca.scala 31:39]
    node _p_comb_2_T_3 = bits(_p_comb_2_T_2, 0, 0) @[rca.scala 31:56]
    node p_comb_2 = _p_comb_2_T_3 @[rca.scala 23:22 31:21]
    node c_comb_2 = _c_comb_2_T_1 @[rca.scala 25:22 33:21]
    node _s_comb_2_T = xor(p_comb_2, c_comb_2) @[rca.scala 32:34]
    node _c_comb_3_T = and(c_comb_2, p_comb_2) @[rca.scala 33:34]
    node g_comb_2 = _g_comb_2_T_3 @[rca.scala 22:22 30:21]
    node _c_comb_3_T_1 = or(_c_comb_3_T, g_comb_2) @[rca.scala 33:46]
    node _g_comb_3_T = bits(input_a_in, 3, 3) @[rca.scala 30:35]
    node _g_comb_3_T_1 = bits(input_b_in, 3, 3) @[rca.scala 30:51]
    node _g_comb_3_T_2 = and(_g_comb_3_T, _g_comb_3_T_1) @[rca.scala 30:39]
    node _g_comb_3_T_3 = bits(_g_comb_3_T_2, 0, 0) @[rca.scala 30:56]
    node _p_comb_3_T = bits(input_a_in, 3, 3) @[rca.scala 31:35]
    node _p_comb_3_T_1 = bits(input_b_in, 3, 3) @[rca.scala 31:51]
    node _p_comb_3_T_2 = xor(_p_comb_3_T, _p_comb_3_T_1) @[rca.scala 31:39]
    node _p_comb_3_T_3 = bits(_p_comb_3_T_2, 0, 0) @[rca.scala 31:56]
    node p_comb_3 = _p_comb_3_T_3 @[rca.scala 23:22 31:21]
    node c_comb_3 = _c_comb_3_T_1 @[rca.scala 25:22 33:21]
    node _s_comb_3_T = xor(p_comb_3, c_comb_3) @[rca.scala 32:34]
    node _c_comb_4_T = and(c_comb_3, p_comb_3) @[rca.scala 33:34]
    node g_comb_3 = _g_comb_3_T_3 @[rca.scala 22:22 30:21]
    node _c_comb_4_T_1 = or(_c_comb_4_T, g_comb_3) @[rca.scala 33:46]
    node _g_comb_4_T = bits(input_a_in, 4, 4) @[rca.scala 30:35]
    node _g_comb_4_T_1 = bits(input_b_in, 4, 4) @[rca.scala 30:51]
    node _g_comb_4_T_2 = and(_g_comb_4_T, _g_comb_4_T_1) @[rca.scala 30:39]
    node _g_comb_4_T_3 = bits(_g_comb_4_T_2, 0, 0) @[rca.scala 30:56]
    node _p_comb_4_T = bits(input_a_in, 4, 4) @[rca.scala 31:35]
    node _p_comb_4_T_1 = bits(input_b_in, 4, 4) @[rca.scala 31:51]
    node _p_comb_4_T_2 = xor(_p_comb_4_T, _p_comb_4_T_1) @[rca.scala 31:39]
    node _p_comb_4_T_3 = bits(_p_comb_4_T_2, 0, 0) @[rca.scala 31:56]
    node p_comb_4 = _p_comb_4_T_3 @[rca.scala 23:22 31:21]
    node c_comb_4 = _c_comb_4_T_1 @[rca.scala 25:22 33:21]
    node _s_comb_4_T = xor(p_comb_4, c_comb_4) @[rca.scala 32:34]
    node _c_comb_5_T = and(c_comb_4, p_comb_4) @[rca.scala 33:34]
    node g_comb_4 = _g_comb_4_T_3 @[rca.scala 22:22 30:21]
    node _c_comb_5_T_1 = or(_c_comb_5_T, g_comb_4) @[rca.scala 33:46]
    node _g_comb_5_T = bits(input_a_in, 5, 5) @[rca.scala 30:35]
    node _g_comb_5_T_1 = bits(input_b_in, 5, 5) @[rca.scala 30:51]
    node _g_comb_5_T_2 = and(_g_comb_5_T, _g_comb_5_T_1) @[rca.scala 30:39]
    node _g_comb_5_T_3 = bits(_g_comb_5_T_2, 0, 0) @[rca.scala 30:56]
    node _p_comb_5_T = bits(input_a_in, 5, 5) @[rca.scala 31:35]
    node _p_comb_5_T_1 = bits(input_b_in, 5, 5) @[rca.scala 31:51]
    node _p_comb_5_T_2 = xor(_p_comb_5_T, _p_comb_5_T_1) @[rca.scala 31:39]
    node _p_comb_5_T_3 = bits(_p_comb_5_T_2, 0, 0) @[rca.scala 31:56]
    node p_comb_5 = _p_comb_5_T_3 @[rca.scala 23:22 31:21]
    node c_comb_5 = _c_comb_5_T_1 @[rca.scala 25:22 33:21]
    node _s_comb_5_T = xor(p_comb_5, c_comb_5) @[rca.scala 32:34]
    node _c_comb_6_T = and(c_comb_5, p_comb_5) @[rca.scala 33:34]
    node g_comb_5 = _g_comb_5_T_3 @[rca.scala 22:22 30:21]
    node _c_comb_6_T_1 = or(_c_comb_6_T, g_comb_5) @[rca.scala 33:46]
    node _g_comb_6_T = bits(input_a_in, 6, 6) @[rca.scala 30:35]
    node _g_comb_6_T_1 = bits(input_b_in, 6, 6) @[rca.scala 30:51]
    node _g_comb_6_T_2 = and(_g_comb_6_T, _g_comb_6_T_1) @[rca.scala 30:39]
    node _g_comb_6_T_3 = bits(_g_comb_6_T_2, 0, 0) @[rca.scala 30:56]
    node _p_comb_6_T = bits(input_a_in, 6, 6) @[rca.scala 31:35]
    node _p_comb_6_T_1 = bits(input_b_in, 6, 6) @[rca.scala 31:51]
    node _p_comb_6_T_2 = xor(_p_comb_6_T, _p_comb_6_T_1) @[rca.scala 31:39]
    node _p_comb_6_T_3 = bits(_p_comb_6_T_2, 0, 0) @[rca.scala 31:56]
    node p_comb_6 = _p_comb_6_T_3 @[rca.scala 23:22 31:21]
    node c_comb_6 = _c_comb_6_T_1 @[rca.scala 25:22 33:21]
    node _s_comb_6_T = xor(p_comb_6, c_comb_6) @[rca.scala 32:34]
    node _c_comb_7_T = and(c_comb_6, p_comb_6) @[rca.scala 33:34]
    node g_comb_6 = _g_comb_6_T_3 @[rca.scala 22:22 30:21]
    node _c_comb_7_T_1 = or(_c_comb_7_T, g_comb_6) @[rca.scala 33:46]
    node _g_comb_7_T = bits(input_a_in, 7, 7) @[rca.scala 30:35]
    node _g_comb_7_T_1 = bits(input_b_in, 7, 7) @[rca.scala 30:51]
    node _g_comb_7_T_2 = and(_g_comb_7_T, _g_comb_7_T_1) @[rca.scala 30:39]
    node _g_comb_7_T_3 = bits(_g_comb_7_T_2, 0, 0) @[rca.scala 30:56]
    node _p_comb_7_T = bits(input_a_in, 7, 7) @[rca.scala 31:35]
    node _p_comb_7_T_1 = bits(input_b_in, 7, 7) @[rca.scala 31:51]
    node _p_comb_7_T_2 = xor(_p_comb_7_T, _p_comb_7_T_1) @[rca.scala 31:39]
    node _p_comb_7_T_3 = bits(_p_comb_7_T_2, 0, 0) @[rca.scala 31:56]
    node p_comb_7 = _p_comb_7_T_3 @[rca.scala 23:22 31:21]
    node c_comb_7 = _c_comb_7_T_1 @[rca.scala 25:22 33:21]
    node _s_comb_7_T = xor(p_comb_7, c_comb_7) @[rca.scala 32:34]
    node _c_comb_8_T = and(c_comb_7, p_comb_7) @[rca.scala 33:34]
    node g_comb_7 = _g_comb_7_T_3 @[rca.scala 22:22 30:21]
    node _c_comb_8_T_1 = or(_c_comb_8_T, g_comb_7) @[rca.scala 33:46]
    node _g_comb_8_T = bits(input_a_in, 8, 8) @[rca.scala 30:35]
    node _g_comb_8_T_1 = bits(input_b_in, 8, 8) @[rca.scala 30:51]
    node _g_comb_8_T_2 = and(_g_comb_8_T, _g_comb_8_T_1) @[rca.scala 30:39]
    node _g_comb_8_T_3 = bits(_g_comb_8_T_2, 0, 0) @[rca.scala 30:56]
    node _p_comb_8_T = bits(input_a_in, 8, 8) @[rca.scala 31:35]
    node _p_comb_8_T_1 = bits(input_b_in, 8, 8) @[rca.scala 31:51]
    node _p_comb_8_T_2 = xor(_p_comb_8_T, _p_comb_8_T_1) @[rca.scala 31:39]
    node _p_comb_8_T_3 = bits(_p_comb_8_T_2, 0, 0) @[rca.scala 31:56]
    node p_comb_8 = _p_comb_8_T_3 @[rca.scala 23:22 31:21]
    node c_comb_8 = _c_comb_8_T_1 @[rca.scala 25:22 33:21]
    node _s_comb_8_T = xor(p_comb_8, c_comb_8) @[rca.scala 32:34]
    node _c_comb_9_T = and(c_comb_8, p_comb_8) @[rca.scala 33:34]
    node g_comb_8 = _g_comb_8_T_3 @[rca.scala 22:22 30:21]
    node _c_comb_9_T_1 = or(_c_comb_9_T, g_comb_8) @[rca.scala 33:46]
    node _g_comb_9_T = bits(input_a_in, 9, 9) @[rca.scala 30:35]
    node _g_comb_9_T_1 = bits(input_b_in, 9, 9) @[rca.scala 30:51]
    node _g_comb_9_T_2 = and(_g_comb_9_T, _g_comb_9_T_1) @[rca.scala 30:39]
    node _g_comb_9_T_3 = bits(_g_comb_9_T_2, 0, 0) @[rca.scala 30:56]
    node _p_comb_9_T = bits(input_a_in, 9, 9) @[rca.scala 31:35]
    node _p_comb_9_T_1 = bits(input_b_in, 9, 9) @[rca.scala 31:51]
    node _p_comb_9_T_2 = xor(_p_comb_9_T, _p_comb_9_T_1) @[rca.scala 31:39]
    node _p_comb_9_T_3 = bits(_p_comb_9_T_2, 0, 0) @[rca.scala 31:56]
    node p_comb_9 = _p_comb_9_T_3 @[rca.scala 23:22 31:21]
    node c_comb_9 = _c_comb_9_T_1 @[rca.scala 25:22 33:21]
    node _s_comb_9_T = xor(p_comb_9, c_comb_9) @[rca.scala 32:34]
    node _c_comb_10_T = and(c_comb_9, p_comb_9) @[rca.scala 33:34]
    node g_comb_9 = _g_comb_9_T_3 @[rca.scala 22:22 30:21]
    node _c_comb_10_T_1 = or(_c_comb_10_T, g_comb_9) @[rca.scala 33:46]
    node _g_comb_10_T = bits(input_a_in, 10, 10) @[rca.scala 30:35]
    node _g_comb_10_T_1 = bits(input_b_in, 10, 10) @[rca.scala 30:51]
    node _g_comb_10_T_2 = and(_g_comb_10_T, _g_comb_10_T_1) @[rca.scala 30:39]
    node _g_comb_10_T_3 = bits(_g_comb_10_T_2, 0, 0) @[rca.scala 30:56]
    node _p_comb_10_T = bits(input_a_in, 10, 10) @[rca.scala 31:35]
    node _p_comb_10_T_1 = bits(input_b_in, 10, 10) @[rca.scala 31:51]
    node _p_comb_10_T_2 = xor(_p_comb_10_T, _p_comb_10_T_1) @[rca.scala 31:39]
    node _p_comb_10_T_3 = bits(_p_comb_10_T_2, 0, 0) @[rca.scala 31:56]
    node p_comb_10 = _p_comb_10_T_3 @[rca.scala 23:22 31:21]
    node c_comb_10 = _c_comb_10_T_1 @[rca.scala 25:22 33:21]
    node _s_comb_10_T = xor(p_comb_10, c_comb_10) @[rca.scala 32:34]
    node _c_comb_11_T = and(c_comb_10, p_comb_10) @[rca.scala 33:34]
    node g_comb_10 = _g_comb_10_T_3 @[rca.scala 22:22 30:21]
    node _c_comb_11_T_1 = or(_c_comb_11_T, g_comb_10) @[rca.scala 33:46]
    node _g_comb_11_T = bits(input_a_in, 11, 11) @[rca.scala 30:35]
    node _g_comb_11_T_1 = bits(input_b_in, 11, 11) @[rca.scala 30:51]
    node _g_comb_11_T_2 = and(_g_comb_11_T, _g_comb_11_T_1) @[rca.scala 30:39]
    node _g_comb_11_T_3 = bits(_g_comb_11_T_2, 0, 0) @[rca.scala 30:56]
    node _p_comb_11_T = bits(input_a_in, 11, 11) @[rca.scala 31:35]
    node _p_comb_11_T_1 = bits(input_b_in, 11, 11) @[rca.scala 31:51]
    node _p_comb_11_T_2 = xor(_p_comb_11_T, _p_comb_11_T_1) @[rca.scala 31:39]
    node _p_comb_11_T_3 = bits(_p_comb_11_T_2, 0, 0) @[rca.scala 31:56]
    node p_comb_11 = _p_comb_11_T_3 @[rca.scala 23:22 31:21]
    node c_comb_11 = _c_comb_11_T_1 @[rca.scala 25:22 33:21]
    node _s_comb_11_T = xor(p_comb_11, c_comb_11) @[rca.scala 32:34]
    node _c_comb_12_T = and(c_comb_11, p_comb_11) @[rca.scala 33:34]
    node g_comb_11 = _g_comb_11_T_3 @[rca.scala 22:22 30:21]
    node _c_comb_12_T_1 = or(_c_comb_12_T, g_comb_11) @[rca.scala 33:46]
    node _g_comb_12_T = bits(input_a_in, 12, 12) @[rca.scala 30:35]
    node _g_comb_12_T_1 = bits(input_b_in, 12, 12) @[rca.scala 30:51]
    node _g_comb_12_T_2 = and(_g_comb_12_T, _g_comb_12_T_1) @[rca.scala 30:39]
    node _g_comb_12_T_3 = bits(_g_comb_12_T_2, 0, 0) @[rca.scala 30:56]
    node _p_comb_12_T = bits(input_a_in, 12, 12) @[rca.scala 31:35]
    node _p_comb_12_T_1 = bits(input_b_in, 12, 12) @[rca.scala 31:51]
    node _p_comb_12_T_2 = xor(_p_comb_12_T, _p_comb_12_T_1) @[rca.scala 31:39]
    node _p_comb_12_T_3 = bits(_p_comb_12_T_2, 0, 0) @[rca.scala 31:56]
    node p_comb_12 = _p_comb_12_T_3 @[rca.scala 23:22 31:21]
    node c_comb_12 = _c_comb_12_T_1 @[rca.scala 25:22 33:21]
    node _s_comb_12_T = xor(p_comb_12, c_comb_12) @[rca.scala 32:34]
    node _c_comb_13_T = and(c_comb_12, p_comb_12) @[rca.scala 33:34]
    node g_comb_12 = _g_comb_12_T_3 @[rca.scala 22:22 30:21]
    node _c_comb_13_T_1 = or(_c_comb_13_T, g_comb_12) @[rca.scala 33:46]
    node _g_comb_13_T = bits(input_a_in, 13, 13) @[rca.scala 30:35]
    node _g_comb_13_T_1 = bits(input_b_in, 13, 13) @[rca.scala 30:51]
    node _g_comb_13_T_2 = and(_g_comb_13_T, _g_comb_13_T_1) @[rca.scala 30:39]
    node _g_comb_13_T_3 = bits(_g_comb_13_T_2, 0, 0) @[rca.scala 30:56]
    node _p_comb_13_T = bits(input_a_in, 13, 13) @[rca.scala 31:35]
    node _p_comb_13_T_1 = bits(input_b_in, 13, 13) @[rca.scala 31:51]
    node _p_comb_13_T_2 = xor(_p_comb_13_T, _p_comb_13_T_1) @[rca.scala 31:39]
    node _p_comb_13_T_3 = bits(_p_comb_13_T_2, 0, 0) @[rca.scala 31:56]
    node p_comb_13 = _p_comb_13_T_3 @[rca.scala 23:22 31:21]
    node c_comb_13 = _c_comb_13_T_1 @[rca.scala 25:22 33:21]
    node _s_comb_13_T = xor(p_comb_13, c_comb_13) @[rca.scala 32:34]
    node _c_comb_14_T = and(c_comb_13, p_comb_13) @[rca.scala 33:34]
    node g_comb_13 = _g_comb_13_T_3 @[rca.scala 22:22 30:21]
    node _c_comb_14_T_1 = or(_c_comb_14_T, g_comb_13) @[rca.scala 33:46]
    node _g_comb_14_T = bits(input_a_in, 14, 14) @[rca.scala 30:35]
    node _g_comb_14_T_1 = bits(input_b_in, 14, 14) @[rca.scala 30:51]
    node _g_comb_14_T_2 = and(_g_comb_14_T, _g_comb_14_T_1) @[rca.scala 30:39]
    node _g_comb_14_T_3 = bits(_g_comb_14_T_2, 0, 0) @[rca.scala 30:56]
    node _p_comb_14_T = bits(input_a_in, 14, 14) @[rca.scala 31:35]
    node _p_comb_14_T_1 = bits(input_b_in, 14, 14) @[rca.scala 31:51]
    node _p_comb_14_T_2 = xor(_p_comb_14_T, _p_comb_14_T_1) @[rca.scala 31:39]
    node _p_comb_14_T_3 = bits(_p_comb_14_T_2, 0, 0) @[rca.scala 31:56]
    node p_comb_14 = _p_comb_14_T_3 @[rca.scala 23:22 31:21]
    node c_comb_14 = _c_comb_14_T_1 @[rca.scala 25:22 33:21]
    node _s_comb_14_T = xor(p_comb_14, c_comb_14) @[rca.scala 32:34]
    node _c_comb_15_T = and(c_comb_14, p_comb_14) @[rca.scala 33:34]
    node g_comb_14 = _g_comb_14_T_3 @[rca.scala 22:22 30:21]
    node _c_comb_15_T_1 = or(_c_comb_15_T, g_comb_14) @[rca.scala 33:46]
    node _g_comb_15_T = bits(input_a_in, 15, 15) @[rca.scala 30:35]
    node _g_comb_15_T_1 = bits(input_b_in, 15, 15) @[rca.scala 30:51]
    node _g_comb_15_T_2 = and(_g_comb_15_T, _g_comb_15_T_1) @[rca.scala 30:39]
    node _g_comb_15_T_3 = bits(_g_comb_15_T_2, 0, 0) @[rca.scala 30:56]
    node _p_comb_15_T = bits(input_a_in, 15, 15) @[rca.scala 31:35]
    node _p_comb_15_T_1 = bits(input_b_in, 15, 15) @[rca.scala 31:51]
    node _p_comb_15_T_2 = xor(_p_comb_15_T, _p_comb_15_T_1) @[rca.scala 31:39]
    node _p_comb_15_T_3 = bits(_p_comb_15_T_2, 0, 0) @[rca.scala 31:56]
    node p_comb_15 = _p_comb_15_T_3 @[rca.scala 23:22 31:21]
    node c_comb_15 = _c_comb_15_T_1 @[rca.scala 25:22 33:21]
    node _s_comb_15_T = xor(p_comb_15, c_comb_15) @[rca.scala 32:34]
    node _c_comb_16_T = and(c_comb_15, p_comb_15) @[rca.scala 33:34]
    node g_comb_15 = _g_comb_15_T_3 @[rca.scala 22:22 30:21]
    node _c_comb_16_T_1 = or(_c_comb_16_T, g_comb_15) @[rca.scala 33:46]
    node s_comb_1 = _s_comb_1_T @[rca.scala 24:22 32:21]
    node s_comb_0 = _s_comb_0_T @[rca.scala 24:22 32:21]
    node output_S_lo_lo_lo = cat(s_comb_1, s_comb_0) @[rca.scala 36:24]
    node s_comb_3 = _s_comb_3_T @[rca.scala 24:22 32:21]
    node s_comb_2 = _s_comb_2_T @[rca.scala 24:22 32:21]
    node output_S_lo_lo_hi = cat(s_comb_3, s_comb_2) @[rca.scala 36:24]
    node output_S_lo_lo = cat(output_S_lo_lo_hi, output_S_lo_lo_lo) @[rca.scala 36:24]
    node s_comb_5 = _s_comb_5_T @[rca.scala 24:22 32:21]
    node s_comb_4 = _s_comb_4_T @[rca.scala 24:22 32:21]
    node output_S_lo_hi_lo = cat(s_comb_5, s_comb_4) @[rca.scala 36:24]
    node s_comb_7 = _s_comb_7_T @[rca.scala 24:22 32:21]
    node s_comb_6 = _s_comb_6_T @[rca.scala 24:22 32:21]
    node output_S_lo_hi_hi = cat(s_comb_7, s_comb_6) @[rca.scala 36:24]
    node output_S_lo_hi = cat(output_S_lo_hi_hi, output_S_lo_hi_lo) @[rca.scala 36:24]
    node output_S_lo = cat(output_S_lo_hi, output_S_lo_lo) @[rca.scala 36:24]
    node s_comb_9 = _s_comb_9_T @[rca.scala 24:22 32:21]
    node s_comb_8 = _s_comb_8_T @[rca.scala 24:22 32:21]
    node output_S_hi_lo_lo = cat(s_comb_9, s_comb_8) @[rca.scala 36:24]
    node s_comb_11 = _s_comb_11_T @[rca.scala 24:22 32:21]
    node s_comb_10 = _s_comb_10_T @[rca.scala 24:22 32:21]
    node output_S_hi_lo_hi = cat(s_comb_11, s_comb_10) @[rca.scala 36:24]
    node output_S_hi_lo = cat(output_S_hi_lo_hi, output_S_hi_lo_lo) @[rca.scala 36:24]
    node s_comb_13 = _s_comb_13_T @[rca.scala 24:22 32:21]
    node s_comb_12 = _s_comb_12_T @[rca.scala 24:22 32:21]
    node output_S_hi_hi_lo = cat(s_comb_13, s_comb_12) @[rca.scala 36:24]
    node s_comb_15 = _s_comb_15_T @[rca.scala 24:22 32:21]
    node s_comb_14 = _s_comb_14_T @[rca.scala 24:22 32:21]
    node output_S_hi_hi_hi = cat(s_comb_15, s_comb_14) @[rca.scala 36:24]
    node output_S_hi_hi = cat(output_S_hi_hi_hi, output_S_hi_hi_lo) @[rca.scala 36:24]
    node output_S_hi = cat(output_S_hi_hi, output_S_hi_lo) @[rca.scala 36:24]
    node _output_S_T = cat(output_S_hi, output_S_lo) @[rca.scala 36:24]
    node c_comb_16 = _c_comb_16_T_1 @[rca.scala 25:22 33:21]
    output_S <= _output_S_T @[rca.scala 36:14]
    output_C <= pad(c_comb_16, 16) @[rca.scala 37:14]

  module pp_compressor3_2 :
    input clock : Clock
    input reset : UInt<1>
    input input_pp0_in : UInt<16>
    input input_pp1_in : UInt<16>
    input input_pp2_in : UInt<16>
    output output_S : UInt<16>
    output output_C : UInt<16>

    node _g_comb_0_T = bits(input_pp0_in, 0, 0) @[pp_compressor3_2.scala 28:35]
    node _g_comb_0_T_1 = bits(input_pp1_in, 0, 0) @[pp_compressor3_2.scala 28:53]
    node _g_comb_0_T_2 = and(_g_comb_0_T, _g_comb_0_T_1) @[pp_compressor3_2.scala 28:39]
    node _g_comb_0_T_3 = bits(_g_comb_0_T_2, 0, 0) @[pp_compressor3_2.scala 28:58]
    node _p_comb_0_T = bits(input_pp0_in, 0, 0) @[pp_compressor3_2.scala 29:35]
    node _p_comb_0_T_1 = bits(input_pp1_in, 0, 0) @[pp_compressor3_2.scala 29:53]
    node _p_comb_0_T_2 = xor(_p_comb_0_T, _p_comb_0_T_1) @[pp_compressor3_2.scala 29:39]
    node _p_comb_0_T_3 = bits(_p_comb_0_T_2, 0, 0) @[pp_compressor3_2.scala 29:58]
    node _s_comb_0_T = bits(input_pp2_in, 0, 0) @[pp_compressor3_2.scala 30:46]
    node _s_comb_0_T_1 = bits(_s_comb_0_T, 0, 0) @[pp_compressor3_2.scala 30:50]
    node p_comb_0 = _p_comb_0_T_3 @[pp_compressor3_2.scala 23:22 29:19]
    node _s_comb_0_T_2 = xor(p_comb_0, _s_comb_0_T_1) @[pp_compressor3_2.scala 30:32]
    node _c_comb_0_T = bits(input_pp2_in, 0, 0) @[pp_compressor3_2.scala 31:34]
    node _c_comb_0_T_1 = bits(_c_comb_0_T, 0, 0) @[pp_compressor3_2.scala 31:38]
    node _c_comb_0_T_2 = and(_c_comb_0_T_1, p_comb_0) @[pp_compressor3_2.scala 31:45]
    node g_comb_0 = _g_comb_0_T_3 @[pp_compressor3_2.scala 22:22 28:19]
    node _c_comb_0_T_3 = or(_c_comb_0_T_2, g_comb_0) @[pp_compressor3_2.scala 31:57]
    node _g_comb_1_T = bits(input_pp0_in, 1, 1) @[pp_compressor3_2.scala 28:35]
    node _g_comb_1_T_1 = bits(input_pp1_in, 1, 1) @[pp_compressor3_2.scala 28:53]
    node _g_comb_1_T_2 = and(_g_comb_1_T, _g_comb_1_T_1) @[pp_compressor3_2.scala 28:39]
    node _g_comb_1_T_3 = bits(_g_comb_1_T_2, 0, 0) @[pp_compressor3_2.scala 28:58]
    node _p_comb_1_T = bits(input_pp0_in, 1, 1) @[pp_compressor3_2.scala 29:35]
    node _p_comb_1_T_1 = bits(input_pp1_in, 1, 1) @[pp_compressor3_2.scala 29:53]
    node _p_comb_1_T_2 = xor(_p_comb_1_T, _p_comb_1_T_1) @[pp_compressor3_2.scala 29:39]
    node _p_comb_1_T_3 = bits(_p_comb_1_T_2, 0, 0) @[pp_compressor3_2.scala 29:58]
    node _s_comb_1_T = bits(input_pp2_in, 1, 1) @[pp_compressor3_2.scala 30:46]
    node _s_comb_1_T_1 = bits(_s_comb_1_T, 0, 0) @[pp_compressor3_2.scala 30:50]
    node p_comb_1 = _p_comb_1_T_3 @[pp_compressor3_2.scala 23:22 29:19]
    node _s_comb_1_T_2 = xor(p_comb_1, _s_comb_1_T_1) @[pp_compressor3_2.scala 30:32]
    node _c_comb_1_T = bits(input_pp2_in, 1, 1) @[pp_compressor3_2.scala 31:34]
    node _c_comb_1_T_1 = bits(_c_comb_1_T, 0, 0) @[pp_compressor3_2.scala 31:38]
    node _c_comb_1_T_2 = and(_c_comb_1_T_1, p_comb_1) @[pp_compressor3_2.scala 31:45]
    node g_comb_1 = _g_comb_1_T_3 @[pp_compressor3_2.scala 22:22 28:19]
    node _c_comb_1_T_3 = or(_c_comb_1_T_2, g_comb_1) @[pp_compressor3_2.scala 31:57]
    node _g_comb_2_T = bits(input_pp0_in, 2, 2) @[pp_compressor3_2.scala 28:35]
    node _g_comb_2_T_1 = bits(input_pp1_in, 2, 2) @[pp_compressor3_2.scala 28:53]
    node _g_comb_2_T_2 = and(_g_comb_2_T, _g_comb_2_T_1) @[pp_compressor3_2.scala 28:39]
    node _g_comb_2_T_3 = bits(_g_comb_2_T_2, 0, 0) @[pp_compressor3_2.scala 28:58]
    node _p_comb_2_T = bits(input_pp0_in, 2, 2) @[pp_compressor3_2.scala 29:35]
    node _p_comb_2_T_1 = bits(input_pp1_in, 2, 2) @[pp_compressor3_2.scala 29:53]
    node _p_comb_2_T_2 = xor(_p_comb_2_T, _p_comb_2_T_1) @[pp_compressor3_2.scala 29:39]
    node _p_comb_2_T_3 = bits(_p_comb_2_T_2, 0, 0) @[pp_compressor3_2.scala 29:58]
    node _s_comb_2_T = bits(input_pp2_in, 2, 2) @[pp_compressor3_2.scala 30:46]
    node _s_comb_2_T_1 = bits(_s_comb_2_T, 0, 0) @[pp_compressor3_2.scala 30:50]
    node p_comb_2 = _p_comb_2_T_3 @[pp_compressor3_2.scala 23:22 29:19]
    node _s_comb_2_T_2 = xor(p_comb_2, _s_comb_2_T_1) @[pp_compressor3_2.scala 30:32]
    node _c_comb_2_T = bits(input_pp2_in, 2, 2) @[pp_compressor3_2.scala 31:34]
    node _c_comb_2_T_1 = bits(_c_comb_2_T, 0, 0) @[pp_compressor3_2.scala 31:38]
    node _c_comb_2_T_2 = and(_c_comb_2_T_1, p_comb_2) @[pp_compressor3_2.scala 31:45]
    node g_comb_2 = _g_comb_2_T_3 @[pp_compressor3_2.scala 22:22 28:19]
    node _c_comb_2_T_3 = or(_c_comb_2_T_2, g_comb_2) @[pp_compressor3_2.scala 31:57]
    node _g_comb_3_T = bits(input_pp0_in, 3, 3) @[pp_compressor3_2.scala 28:35]
    node _g_comb_3_T_1 = bits(input_pp1_in, 3, 3) @[pp_compressor3_2.scala 28:53]
    node _g_comb_3_T_2 = and(_g_comb_3_T, _g_comb_3_T_1) @[pp_compressor3_2.scala 28:39]
    node _g_comb_3_T_3 = bits(_g_comb_3_T_2, 0, 0) @[pp_compressor3_2.scala 28:58]
    node _p_comb_3_T = bits(input_pp0_in, 3, 3) @[pp_compressor3_2.scala 29:35]
    node _p_comb_3_T_1 = bits(input_pp1_in, 3, 3) @[pp_compressor3_2.scala 29:53]
    node _p_comb_3_T_2 = xor(_p_comb_3_T, _p_comb_3_T_1) @[pp_compressor3_2.scala 29:39]
    node _p_comb_3_T_3 = bits(_p_comb_3_T_2, 0, 0) @[pp_compressor3_2.scala 29:58]
    node _s_comb_3_T = bits(input_pp2_in, 3, 3) @[pp_compressor3_2.scala 30:46]
    node _s_comb_3_T_1 = bits(_s_comb_3_T, 0, 0) @[pp_compressor3_2.scala 30:50]
    node p_comb_3 = _p_comb_3_T_3 @[pp_compressor3_2.scala 23:22 29:19]
    node _s_comb_3_T_2 = xor(p_comb_3, _s_comb_3_T_1) @[pp_compressor3_2.scala 30:32]
    node _c_comb_3_T = bits(input_pp2_in, 3, 3) @[pp_compressor3_2.scala 31:34]
    node _c_comb_3_T_1 = bits(_c_comb_3_T, 0, 0) @[pp_compressor3_2.scala 31:38]
    node _c_comb_3_T_2 = and(_c_comb_3_T_1, p_comb_3) @[pp_compressor3_2.scala 31:45]
    node g_comb_3 = _g_comb_3_T_3 @[pp_compressor3_2.scala 22:22 28:19]
    node _c_comb_3_T_3 = or(_c_comb_3_T_2, g_comb_3) @[pp_compressor3_2.scala 31:57]
    node _g_comb_4_T = bits(input_pp0_in, 4, 4) @[pp_compressor3_2.scala 28:35]
    node _g_comb_4_T_1 = bits(input_pp1_in, 4, 4) @[pp_compressor3_2.scala 28:53]
    node _g_comb_4_T_2 = and(_g_comb_4_T, _g_comb_4_T_1) @[pp_compressor3_2.scala 28:39]
    node _g_comb_4_T_3 = bits(_g_comb_4_T_2, 0, 0) @[pp_compressor3_2.scala 28:58]
    node _p_comb_4_T = bits(input_pp0_in, 4, 4) @[pp_compressor3_2.scala 29:35]
    node _p_comb_4_T_1 = bits(input_pp1_in, 4, 4) @[pp_compressor3_2.scala 29:53]
    node _p_comb_4_T_2 = xor(_p_comb_4_T, _p_comb_4_T_1) @[pp_compressor3_2.scala 29:39]
    node _p_comb_4_T_3 = bits(_p_comb_4_T_2, 0, 0) @[pp_compressor3_2.scala 29:58]
    node _s_comb_4_T = bits(input_pp2_in, 4, 4) @[pp_compressor3_2.scala 30:46]
    node _s_comb_4_T_1 = bits(_s_comb_4_T, 0, 0) @[pp_compressor3_2.scala 30:50]
    node p_comb_4 = _p_comb_4_T_3 @[pp_compressor3_2.scala 23:22 29:19]
    node _s_comb_4_T_2 = xor(p_comb_4, _s_comb_4_T_1) @[pp_compressor3_2.scala 30:32]
    node _c_comb_4_T = bits(input_pp2_in, 4, 4) @[pp_compressor3_2.scala 31:34]
    node _c_comb_4_T_1 = bits(_c_comb_4_T, 0, 0) @[pp_compressor3_2.scala 31:38]
    node _c_comb_4_T_2 = and(_c_comb_4_T_1, p_comb_4) @[pp_compressor3_2.scala 31:45]
    node g_comb_4 = _g_comb_4_T_3 @[pp_compressor3_2.scala 22:22 28:19]
    node _c_comb_4_T_3 = or(_c_comb_4_T_2, g_comb_4) @[pp_compressor3_2.scala 31:57]
    node _g_comb_5_T = bits(input_pp0_in, 5, 5) @[pp_compressor3_2.scala 28:35]
    node _g_comb_5_T_1 = bits(input_pp1_in, 5, 5) @[pp_compressor3_2.scala 28:53]
    node _g_comb_5_T_2 = and(_g_comb_5_T, _g_comb_5_T_1) @[pp_compressor3_2.scala 28:39]
    node _g_comb_5_T_3 = bits(_g_comb_5_T_2, 0, 0) @[pp_compressor3_2.scala 28:58]
    node _p_comb_5_T = bits(input_pp0_in, 5, 5) @[pp_compressor3_2.scala 29:35]
    node _p_comb_5_T_1 = bits(input_pp1_in, 5, 5) @[pp_compressor3_2.scala 29:53]
    node _p_comb_5_T_2 = xor(_p_comb_5_T, _p_comb_5_T_1) @[pp_compressor3_2.scala 29:39]
    node _p_comb_5_T_3 = bits(_p_comb_5_T_2, 0, 0) @[pp_compressor3_2.scala 29:58]
    node _s_comb_5_T = bits(input_pp2_in, 5, 5) @[pp_compressor3_2.scala 30:46]
    node _s_comb_5_T_1 = bits(_s_comb_5_T, 0, 0) @[pp_compressor3_2.scala 30:50]
    node p_comb_5 = _p_comb_5_T_3 @[pp_compressor3_2.scala 23:22 29:19]
    node _s_comb_5_T_2 = xor(p_comb_5, _s_comb_5_T_1) @[pp_compressor3_2.scala 30:32]
    node _c_comb_5_T = bits(input_pp2_in, 5, 5) @[pp_compressor3_2.scala 31:34]
    node _c_comb_5_T_1 = bits(_c_comb_5_T, 0, 0) @[pp_compressor3_2.scala 31:38]
    node _c_comb_5_T_2 = and(_c_comb_5_T_1, p_comb_5) @[pp_compressor3_2.scala 31:45]
    node g_comb_5 = _g_comb_5_T_3 @[pp_compressor3_2.scala 22:22 28:19]
    node _c_comb_5_T_3 = or(_c_comb_5_T_2, g_comb_5) @[pp_compressor3_2.scala 31:57]
    node _g_comb_6_T = bits(input_pp0_in, 6, 6) @[pp_compressor3_2.scala 28:35]
    node _g_comb_6_T_1 = bits(input_pp1_in, 6, 6) @[pp_compressor3_2.scala 28:53]
    node _g_comb_6_T_2 = and(_g_comb_6_T, _g_comb_6_T_1) @[pp_compressor3_2.scala 28:39]
    node _g_comb_6_T_3 = bits(_g_comb_6_T_2, 0, 0) @[pp_compressor3_2.scala 28:58]
    node _p_comb_6_T = bits(input_pp0_in, 6, 6) @[pp_compressor3_2.scala 29:35]
    node _p_comb_6_T_1 = bits(input_pp1_in, 6, 6) @[pp_compressor3_2.scala 29:53]
    node _p_comb_6_T_2 = xor(_p_comb_6_T, _p_comb_6_T_1) @[pp_compressor3_2.scala 29:39]
    node _p_comb_6_T_3 = bits(_p_comb_6_T_2, 0, 0) @[pp_compressor3_2.scala 29:58]
    node _s_comb_6_T = bits(input_pp2_in, 6, 6) @[pp_compressor3_2.scala 30:46]
    node _s_comb_6_T_1 = bits(_s_comb_6_T, 0, 0) @[pp_compressor3_2.scala 30:50]
    node p_comb_6 = _p_comb_6_T_3 @[pp_compressor3_2.scala 23:22 29:19]
    node _s_comb_6_T_2 = xor(p_comb_6, _s_comb_6_T_1) @[pp_compressor3_2.scala 30:32]
    node _c_comb_6_T = bits(input_pp2_in, 6, 6) @[pp_compressor3_2.scala 31:34]
    node _c_comb_6_T_1 = bits(_c_comb_6_T, 0, 0) @[pp_compressor3_2.scala 31:38]
    node _c_comb_6_T_2 = and(_c_comb_6_T_1, p_comb_6) @[pp_compressor3_2.scala 31:45]
    node g_comb_6 = _g_comb_6_T_3 @[pp_compressor3_2.scala 22:22 28:19]
    node _c_comb_6_T_3 = or(_c_comb_6_T_2, g_comb_6) @[pp_compressor3_2.scala 31:57]
    node _g_comb_7_T = bits(input_pp0_in, 7, 7) @[pp_compressor3_2.scala 28:35]
    node _g_comb_7_T_1 = bits(input_pp1_in, 7, 7) @[pp_compressor3_2.scala 28:53]
    node _g_comb_7_T_2 = and(_g_comb_7_T, _g_comb_7_T_1) @[pp_compressor3_2.scala 28:39]
    node _g_comb_7_T_3 = bits(_g_comb_7_T_2, 0, 0) @[pp_compressor3_2.scala 28:58]
    node _p_comb_7_T = bits(input_pp0_in, 7, 7) @[pp_compressor3_2.scala 29:35]
    node _p_comb_7_T_1 = bits(input_pp1_in, 7, 7) @[pp_compressor3_2.scala 29:53]
    node _p_comb_7_T_2 = xor(_p_comb_7_T, _p_comb_7_T_1) @[pp_compressor3_2.scala 29:39]
    node _p_comb_7_T_3 = bits(_p_comb_7_T_2, 0, 0) @[pp_compressor3_2.scala 29:58]
    node _s_comb_7_T = bits(input_pp2_in, 7, 7) @[pp_compressor3_2.scala 30:46]
    node _s_comb_7_T_1 = bits(_s_comb_7_T, 0, 0) @[pp_compressor3_2.scala 30:50]
    node p_comb_7 = _p_comb_7_T_3 @[pp_compressor3_2.scala 23:22 29:19]
    node _s_comb_7_T_2 = xor(p_comb_7, _s_comb_7_T_1) @[pp_compressor3_2.scala 30:32]
    node _c_comb_7_T = bits(input_pp2_in, 7, 7) @[pp_compressor3_2.scala 31:34]
    node _c_comb_7_T_1 = bits(_c_comb_7_T, 0, 0) @[pp_compressor3_2.scala 31:38]
    node _c_comb_7_T_2 = and(_c_comb_7_T_1, p_comb_7) @[pp_compressor3_2.scala 31:45]
    node g_comb_7 = _g_comb_7_T_3 @[pp_compressor3_2.scala 22:22 28:19]
    node _c_comb_7_T_3 = or(_c_comb_7_T_2, g_comb_7) @[pp_compressor3_2.scala 31:57]
    node _g_comb_8_T = bits(input_pp0_in, 8, 8) @[pp_compressor3_2.scala 28:35]
    node _g_comb_8_T_1 = bits(input_pp1_in, 8, 8) @[pp_compressor3_2.scala 28:53]
    node _g_comb_8_T_2 = and(_g_comb_8_T, _g_comb_8_T_1) @[pp_compressor3_2.scala 28:39]
    node _g_comb_8_T_3 = bits(_g_comb_8_T_2, 0, 0) @[pp_compressor3_2.scala 28:58]
    node _p_comb_8_T = bits(input_pp0_in, 8, 8) @[pp_compressor3_2.scala 29:35]
    node _p_comb_8_T_1 = bits(input_pp1_in, 8, 8) @[pp_compressor3_2.scala 29:53]
    node _p_comb_8_T_2 = xor(_p_comb_8_T, _p_comb_8_T_1) @[pp_compressor3_2.scala 29:39]
    node _p_comb_8_T_3 = bits(_p_comb_8_T_2, 0, 0) @[pp_compressor3_2.scala 29:58]
    node _s_comb_8_T = bits(input_pp2_in, 8, 8) @[pp_compressor3_2.scala 30:46]
    node _s_comb_8_T_1 = bits(_s_comb_8_T, 0, 0) @[pp_compressor3_2.scala 30:50]
    node p_comb_8 = _p_comb_8_T_3 @[pp_compressor3_2.scala 23:22 29:19]
    node _s_comb_8_T_2 = xor(p_comb_8, _s_comb_8_T_1) @[pp_compressor3_2.scala 30:32]
    node _c_comb_8_T = bits(input_pp2_in, 8, 8) @[pp_compressor3_2.scala 31:34]
    node _c_comb_8_T_1 = bits(_c_comb_8_T, 0, 0) @[pp_compressor3_2.scala 31:38]
    node _c_comb_8_T_2 = and(_c_comb_8_T_1, p_comb_8) @[pp_compressor3_2.scala 31:45]
    node g_comb_8 = _g_comb_8_T_3 @[pp_compressor3_2.scala 22:22 28:19]
    node _c_comb_8_T_3 = or(_c_comb_8_T_2, g_comb_8) @[pp_compressor3_2.scala 31:57]
    node _g_comb_9_T = bits(input_pp0_in, 9, 9) @[pp_compressor3_2.scala 28:35]
    node _g_comb_9_T_1 = bits(input_pp1_in, 9, 9) @[pp_compressor3_2.scala 28:53]
    node _g_comb_9_T_2 = and(_g_comb_9_T, _g_comb_9_T_1) @[pp_compressor3_2.scala 28:39]
    node _g_comb_9_T_3 = bits(_g_comb_9_T_2, 0, 0) @[pp_compressor3_2.scala 28:58]
    node _p_comb_9_T = bits(input_pp0_in, 9, 9) @[pp_compressor3_2.scala 29:35]
    node _p_comb_9_T_1 = bits(input_pp1_in, 9, 9) @[pp_compressor3_2.scala 29:53]
    node _p_comb_9_T_2 = xor(_p_comb_9_T, _p_comb_9_T_1) @[pp_compressor3_2.scala 29:39]
    node _p_comb_9_T_3 = bits(_p_comb_9_T_2, 0, 0) @[pp_compressor3_2.scala 29:58]
    node _s_comb_9_T = bits(input_pp2_in, 9, 9) @[pp_compressor3_2.scala 30:46]
    node _s_comb_9_T_1 = bits(_s_comb_9_T, 0, 0) @[pp_compressor3_2.scala 30:50]
    node p_comb_9 = _p_comb_9_T_3 @[pp_compressor3_2.scala 23:22 29:19]
    node _s_comb_9_T_2 = xor(p_comb_9, _s_comb_9_T_1) @[pp_compressor3_2.scala 30:32]
    node _c_comb_9_T = bits(input_pp2_in, 9, 9) @[pp_compressor3_2.scala 31:34]
    node _c_comb_9_T_1 = bits(_c_comb_9_T, 0, 0) @[pp_compressor3_2.scala 31:38]
    node _c_comb_9_T_2 = and(_c_comb_9_T_1, p_comb_9) @[pp_compressor3_2.scala 31:45]
    node g_comb_9 = _g_comb_9_T_3 @[pp_compressor3_2.scala 22:22 28:19]
    node _c_comb_9_T_3 = or(_c_comb_9_T_2, g_comb_9) @[pp_compressor3_2.scala 31:57]
    node _g_comb_10_T = bits(input_pp0_in, 10, 10) @[pp_compressor3_2.scala 28:35]
    node _g_comb_10_T_1 = bits(input_pp1_in, 10, 10) @[pp_compressor3_2.scala 28:53]
    node _g_comb_10_T_2 = and(_g_comb_10_T, _g_comb_10_T_1) @[pp_compressor3_2.scala 28:39]
    node _g_comb_10_T_3 = bits(_g_comb_10_T_2, 0, 0) @[pp_compressor3_2.scala 28:58]
    node _p_comb_10_T = bits(input_pp0_in, 10, 10) @[pp_compressor3_2.scala 29:35]
    node _p_comb_10_T_1 = bits(input_pp1_in, 10, 10) @[pp_compressor3_2.scala 29:53]
    node _p_comb_10_T_2 = xor(_p_comb_10_T, _p_comb_10_T_1) @[pp_compressor3_2.scala 29:39]
    node _p_comb_10_T_3 = bits(_p_comb_10_T_2, 0, 0) @[pp_compressor3_2.scala 29:58]
    node _s_comb_10_T = bits(input_pp2_in, 10, 10) @[pp_compressor3_2.scala 30:46]
    node _s_comb_10_T_1 = bits(_s_comb_10_T, 0, 0) @[pp_compressor3_2.scala 30:50]
    node p_comb_10 = _p_comb_10_T_3 @[pp_compressor3_2.scala 23:22 29:19]
    node _s_comb_10_T_2 = xor(p_comb_10, _s_comb_10_T_1) @[pp_compressor3_2.scala 30:32]
    node _c_comb_10_T = bits(input_pp2_in, 10, 10) @[pp_compressor3_2.scala 31:34]
    node _c_comb_10_T_1 = bits(_c_comb_10_T, 0, 0) @[pp_compressor3_2.scala 31:38]
    node _c_comb_10_T_2 = and(_c_comb_10_T_1, p_comb_10) @[pp_compressor3_2.scala 31:45]
    node g_comb_10 = _g_comb_10_T_3 @[pp_compressor3_2.scala 22:22 28:19]
    node _c_comb_10_T_3 = or(_c_comb_10_T_2, g_comb_10) @[pp_compressor3_2.scala 31:57]
    node _g_comb_11_T = bits(input_pp0_in, 11, 11) @[pp_compressor3_2.scala 28:35]
    node _g_comb_11_T_1 = bits(input_pp1_in, 11, 11) @[pp_compressor3_2.scala 28:53]
    node _g_comb_11_T_2 = and(_g_comb_11_T, _g_comb_11_T_1) @[pp_compressor3_2.scala 28:39]
    node _g_comb_11_T_3 = bits(_g_comb_11_T_2, 0, 0) @[pp_compressor3_2.scala 28:58]
    node _p_comb_11_T = bits(input_pp0_in, 11, 11) @[pp_compressor3_2.scala 29:35]
    node _p_comb_11_T_1 = bits(input_pp1_in, 11, 11) @[pp_compressor3_2.scala 29:53]
    node _p_comb_11_T_2 = xor(_p_comb_11_T, _p_comb_11_T_1) @[pp_compressor3_2.scala 29:39]
    node _p_comb_11_T_3 = bits(_p_comb_11_T_2, 0, 0) @[pp_compressor3_2.scala 29:58]
    node _s_comb_11_T = bits(input_pp2_in, 11, 11) @[pp_compressor3_2.scala 30:46]
    node _s_comb_11_T_1 = bits(_s_comb_11_T, 0, 0) @[pp_compressor3_2.scala 30:50]
    node p_comb_11 = _p_comb_11_T_3 @[pp_compressor3_2.scala 23:22 29:19]
    node _s_comb_11_T_2 = xor(p_comb_11, _s_comb_11_T_1) @[pp_compressor3_2.scala 30:32]
    node _c_comb_11_T = bits(input_pp2_in, 11, 11) @[pp_compressor3_2.scala 31:34]
    node _c_comb_11_T_1 = bits(_c_comb_11_T, 0, 0) @[pp_compressor3_2.scala 31:38]
    node _c_comb_11_T_2 = and(_c_comb_11_T_1, p_comb_11) @[pp_compressor3_2.scala 31:45]
    node g_comb_11 = _g_comb_11_T_3 @[pp_compressor3_2.scala 22:22 28:19]
    node _c_comb_11_T_3 = or(_c_comb_11_T_2, g_comb_11) @[pp_compressor3_2.scala 31:57]
    node _g_comb_12_T = bits(input_pp0_in, 12, 12) @[pp_compressor3_2.scala 28:35]
    node _g_comb_12_T_1 = bits(input_pp1_in, 12, 12) @[pp_compressor3_2.scala 28:53]
    node _g_comb_12_T_2 = and(_g_comb_12_T, _g_comb_12_T_1) @[pp_compressor3_2.scala 28:39]
    node _g_comb_12_T_3 = bits(_g_comb_12_T_2, 0, 0) @[pp_compressor3_2.scala 28:58]
    node _p_comb_12_T = bits(input_pp0_in, 12, 12) @[pp_compressor3_2.scala 29:35]
    node _p_comb_12_T_1 = bits(input_pp1_in, 12, 12) @[pp_compressor3_2.scala 29:53]
    node _p_comb_12_T_2 = xor(_p_comb_12_T, _p_comb_12_T_1) @[pp_compressor3_2.scala 29:39]
    node _p_comb_12_T_3 = bits(_p_comb_12_T_2, 0, 0) @[pp_compressor3_2.scala 29:58]
    node _s_comb_12_T = bits(input_pp2_in, 12, 12) @[pp_compressor3_2.scala 30:46]
    node _s_comb_12_T_1 = bits(_s_comb_12_T, 0, 0) @[pp_compressor3_2.scala 30:50]
    node p_comb_12 = _p_comb_12_T_3 @[pp_compressor3_2.scala 23:22 29:19]
    node _s_comb_12_T_2 = xor(p_comb_12, _s_comb_12_T_1) @[pp_compressor3_2.scala 30:32]
    node _c_comb_12_T = bits(input_pp2_in, 12, 12) @[pp_compressor3_2.scala 31:34]
    node _c_comb_12_T_1 = bits(_c_comb_12_T, 0, 0) @[pp_compressor3_2.scala 31:38]
    node _c_comb_12_T_2 = and(_c_comb_12_T_1, p_comb_12) @[pp_compressor3_2.scala 31:45]
    node g_comb_12 = _g_comb_12_T_3 @[pp_compressor3_2.scala 22:22 28:19]
    node _c_comb_12_T_3 = or(_c_comb_12_T_2, g_comb_12) @[pp_compressor3_2.scala 31:57]
    node _g_comb_13_T = bits(input_pp0_in, 13, 13) @[pp_compressor3_2.scala 28:35]
    node _g_comb_13_T_1 = bits(input_pp1_in, 13, 13) @[pp_compressor3_2.scala 28:53]
    node _g_comb_13_T_2 = and(_g_comb_13_T, _g_comb_13_T_1) @[pp_compressor3_2.scala 28:39]
    node _g_comb_13_T_3 = bits(_g_comb_13_T_2, 0, 0) @[pp_compressor3_2.scala 28:58]
    node _p_comb_13_T = bits(input_pp0_in, 13, 13) @[pp_compressor3_2.scala 29:35]
    node _p_comb_13_T_1 = bits(input_pp1_in, 13, 13) @[pp_compressor3_2.scala 29:53]
    node _p_comb_13_T_2 = xor(_p_comb_13_T, _p_comb_13_T_1) @[pp_compressor3_2.scala 29:39]
    node _p_comb_13_T_3 = bits(_p_comb_13_T_2, 0, 0) @[pp_compressor3_2.scala 29:58]
    node _s_comb_13_T = bits(input_pp2_in, 13, 13) @[pp_compressor3_2.scala 30:46]
    node _s_comb_13_T_1 = bits(_s_comb_13_T, 0, 0) @[pp_compressor3_2.scala 30:50]
    node p_comb_13 = _p_comb_13_T_3 @[pp_compressor3_2.scala 23:22 29:19]
    node _s_comb_13_T_2 = xor(p_comb_13, _s_comb_13_T_1) @[pp_compressor3_2.scala 30:32]
    node _c_comb_13_T = bits(input_pp2_in, 13, 13) @[pp_compressor3_2.scala 31:34]
    node _c_comb_13_T_1 = bits(_c_comb_13_T, 0, 0) @[pp_compressor3_2.scala 31:38]
    node _c_comb_13_T_2 = and(_c_comb_13_T_1, p_comb_13) @[pp_compressor3_2.scala 31:45]
    node g_comb_13 = _g_comb_13_T_3 @[pp_compressor3_2.scala 22:22 28:19]
    node _c_comb_13_T_3 = or(_c_comb_13_T_2, g_comb_13) @[pp_compressor3_2.scala 31:57]
    node _g_comb_14_T = bits(input_pp0_in, 14, 14) @[pp_compressor3_2.scala 28:35]
    node _g_comb_14_T_1 = bits(input_pp1_in, 14, 14) @[pp_compressor3_2.scala 28:53]
    node _g_comb_14_T_2 = and(_g_comb_14_T, _g_comb_14_T_1) @[pp_compressor3_2.scala 28:39]
    node _g_comb_14_T_3 = bits(_g_comb_14_T_2, 0, 0) @[pp_compressor3_2.scala 28:58]
    node _p_comb_14_T = bits(input_pp0_in, 14, 14) @[pp_compressor3_2.scala 29:35]
    node _p_comb_14_T_1 = bits(input_pp1_in, 14, 14) @[pp_compressor3_2.scala 29:53]
    node _p_comb_14_T_2 = xor(_p_comb_14_T, _p_comb_14_T_1) @[pp_compressor3_2.scala 29:39]
    node _p_comb_14_T_3 = bits(_p_comb_14_T_2, 0, 0) @[pp_compressor3_2.scala 29:58]
    node _s_comb_14_T = bits(input_pp2_in, 14, 14) @[pp_compressor3_2.scala 30:46]
    node _s_comb_14_T_1 = bits(_s_comb_14_T, 0, 0) @[pp_compressor3_2.scala 30:50]
    node p_comb_14 = _p_comb_14_T_3 @[pp_compressor3_2.scala 23:22 29:19]
    node _s_comb_14_T_2 = xor(p_comb_14, _s_comb_14_T_1) @[pp_compressor3_2.scala 30:32]
    node _c_comb_14_T = bits(input_pp2_in, 14, 14) @[pp_compressor3_2.scala 31:34]
    node _c_comb_14_T_1 = bits(_c_comb_14_T, 0, 0) @[pp_compressor3_2.scala 31:38]
    node _c_comb_14_T_2 = and(_c_comb_14_T_1, p_comb_14) @[pp_compressor3_2.scala 31:45]
    node g_comb_14 = _g_comb_14_T_3 @[pp_compressor3_2.scala 22:22 28:19]
    node _c_comb_14_T_3 = or(_c_comb_14_T_2, g_comb_14) @[pp_compressor3_2.scala 31:57]
    node _g_comb_15_T = bits(input_pp0_in, 15, 15) @[pp_compressor3_2.scala 28:35]
    node _g_comb_15_T_1 = bits(input_pp1_in, 15, 15) @[pp_compressor3_2.scala 28:53]
    node _g_comb_15_T_2 = and(_g_comb_15_T, _g_comb_15_T_1) @[pp_compressor3_2.scala 28:39]
    node _g_comb_15_T_3 = bits(_g_comb_15_T_2, 0, 0) @[pp_compressor3_2.scala 28:58]
    node _p_comb_15_T = bits(input_pp0_in, 15, 15) @[pp_compressor3_2.scala 29:35]
    node _p_comb_15_T_1 = bits(input_pp1_in, 15, 15) @[pp_compressor3_2.scala 29:53]
    node _p_comb_15_T_2 = xor(_p_comb_15_T, _p_comb_15_T_1) @[pp_compressor3_2.scala 29:39]
    node _p_comb_15_T_3 = bits(_p_comb_15_T_2, 0, 0) @[pp_compressor3_2.scala 29:58]
    node _s_comb_15_T = bits(input_pp2_in, 15, 15) @[pp_compressor3_2.scala 30:46]
    node _s_comb_15_T_1 = bits(_s_comb_15_T, 0, 0) @[pp_compressor3_2.scala 30:50]
    node p_comb_15 = _p_comb_15_T_3 @[pp_compressor3_2.scala 23:22 29:19]
    node _s_comb_15_T_2 = xor(p_comb_15, _s_comb_15_T_1) @[pp_compressor3_2.scala 30:32]
    node _c_comb_15_T = bits(input_pp2_in, 15, 15) @[pp_compressor3_2.scala 31:34]
    node _c_comb_15_T_1 = bits(_c_comb_15_T, 0, 0) @[pp_compressor3_2.scala 31:38]
    node _c_comb_15_T_2 = and(_c_comb_15_T_1, p_comb_15) @[pp_compressor3_2.scala 31:45]
    node g_comb_15 = _g_comb_15_T_3 @[pp_compressor3_2.scala 22:22 28:19]
    node _c_comb_15_T_3 = or(_c_comb_15_T_2, g_comb_15) @[pp_compressor3_2.scala 31:57]
    node s_comb_1 = _s_comb_1_T_2 @[pp_compressor3_2.scala 24:22 30:19]
    node s_comb_0 = _s_comb_0_T_2 @[pp_compressor3_2.scala 24:22 30:19]
    node output_S_lo_lo_lo = cat(s_comb_1, s_comb_0) @[pp_compressor3_2.scala 34:24]
    node s_comb_3 = _s_comb_3_T_2 @[pp_compressor3_2.scala 24:22 30:19]
    node s_comb_2 = _s_comb_2_T_2 @[pp_compressor3_2.scala 24:22 30:19]
    node output_S_lo_lo_hi = cat(s_comb_3, s_comb_2) @[pp_compressor3_2.scala 34:24]
    node output_S_lo_lo = cat(output_S_lo_lo_hi, output_S_lo_lo_lo) @[pp_compressor3_2.scala 34:24]
    node s_comb_5 = _s_comb_5_T_2 @[pp_compressor3_2.scala 24:22 30:19]
    node s_comb_4 = _s_comb_4_T_2 @[pp_compressor3_2.scala 24:22 30:19]
    node output_S_lo_hi_lo = cat(s_comb_5, s_comb_4) @[pp_compressor3_2.scala 34:24]
    node s_comb_7 = _s_comb_7_T_2 @[pp_compressor3_2.scala 24:22 30:19]
    node s_comb_6 = _s_comb_6_T_2 @[pp_compressor3_2.scala 24:22 30:19]
    node output_S_lo_hi_hi = cat(s_comb_7, s_comb_6) @[pp_compressor3_2.scala 34:24]
    node output_S_lo_hi = cat(output_S_lo_hi_hi, output_S_lo_hi_lo) @[pp_compressor3_2.scala 34:24]
    node output_S_lo = cat(output_S_lo_hi, output_S_lo_lo) @[pp_compressor3_2.scala 34:24]
    node s_comb_9 = _s_comb_9_T_2 @[pp_compressor3_2.scala 24:22 30:19]
    node s_comb_8 = _s_comb_8_T_2 @[pp_compressor3_2.scala 24:22 30:19]
    node output_S_hi_lo_lo = cat(s_comb_9, s_comb_8) @[pp_compressor3_2.scala 34:24]
    node s_comb_11 = _s_comb_11_T_2 @[pp_compressor3_2.scala 24:22 30:19]
    node s_comb_10 = _s_comb_10_T_2 @[pp_compressor3_2.scala 24:22 30:19]
    node output_S_hi_lo_hi = cat(s_comb_11, s_comb_10) @[pp_compressor3_2.scala 34:24]
    node output_S_hi_lo = cat(output_S_hi_lo_hi, output_S_hi_lo_lo) @[pp_compressor3_2.scala 34:24]
    node s_comb_13 = _s_comb_13_T_2 @[pp_compressor3_2.scala 24:22 30:19]
    node s_comb_12 = _s_comb_12_T_2 @[pp_compressor3_2.scala 24:22 30:19]
    node output_S_hi_hi_lo = cat(s_comb_13, s_comb_12) @[pp_compressor3_2.scala 34:24]
    node s_comb_15 = _s_comb_15_T_2 @[pp_compressor3_2.scala 24:22 30:19]
    node s_comb_14 = _s_comb_14_T_2 @[pp_compressor3_2.scala 24:22 30:19]
    node output_S_hi_hi_hi = cat(s_comb_15, s_comb_14) @[pp_compressor3_2.scala 34:24]
    node output_S_hi_hi = cat(output_S_hi_hi_hi, output_S_hi_hi_lo) @[pp_compressor3_2.scala 34:24]
    node output_S_hi = cat(output_S_hi_hi, output_S_hi_lo) @[pp_compressor3_2.scala 34:24]
    node _output_S_T = cat(output_S_hi, output_S_lo) @[pp_compressor3_2.scala 34:24]
    node c_comb_1 = _c_comb_1_T_3 @[pp_compressor3_2.scala 25:22 31:19]
    node c_comb_0 = _c_comb_0_T_3 @[pp_compressor3_2.scala 25:22 31:19]
    node output_C_lo_lo_lo = cat(c_comb_1, c_comb_0) @[pp_compressor3_2.scala 35:29]
    node c_comb_3 = _c_comb_3_T_3 @[pp_compressor3_2.scala 25:22 31:19]
    node c_comb_2 = _c_comb_2_T_3 @[pp_compressor3_2.scala 25:22 31:19]
    node output_C_lo_lo_hi = cat(c_comb_3, c_comb_2) @[pp_compressor3_2.scala 35:29]
    node output_C_lo_lo = cat(output_C_lo_lo_hi, output_C_lo_lo_lo) @[pp_compressor3_2.scala 35:29]
    node c_comb_5 = _c_comb_5_T_3 @[pp_compressor3_2.scala 25:22 31:19]
    node c_comb_4 = _c_comb_4_T_3 @[pp_compressor3_2.scala 25:22 31:19]
    node output_C_lo_hi_lo = cat(c_comb_5, c_comb_4) @[pp_compressor3_2.scala 35:29]
    node c_comb_7 = _c_comb_7_T_3 @[pp_compressor3_2.scala 25:22 31:19]
    node c_comb_6 = _c_comb_6_T_3 @[pp_compressor3_2.scala 25:22 31:19]
    node output_C_lo_hi_hi = cat(c_comb_7, c_comb_6) @[pp_compressor3_2.scala 35:29]
    node output_C_lo_hi = cat(output_C_lo_hi_hi, output_C_lo_hi_lo) @[pp_compressor3_2.scala 35:29]
    node output_C_lo = cat(output_C_lo_hi, output_C_lo_lo) @[pp_compressor3_2.scala 35:29]
    node c_comb_9 = _c_comb_9_T_3 @[pp_compressor3_2.scala 25:22 31:19]
    node c_comb_8 = _c_comb_8_T_3 @[pp_compressor3_2.scala 25:22 31:19]
    node output_C_hi_lo_lo = cat(c_comb_9, c_comb_8) @[pp_compressor3_2.scala 35:29]
    node c_comb_11 = _c_comb_11_T_3 @[pp_compressor3_2.scala 25:22 31:19]
    node c_comb_10 = _c_comb_10_T_3 @[pp_compressor3_2.scala 25:22 31:19]
    node output_C_hi_lo_hi = cat(c_comb_11, c_comb_10) @[pp_compressor3_2.scala 35:29]
    node output_C_hi_lo = cat(output_C_hi_lo_hi, output_C_hi_lo_lo) @[pp_compressor3_2.scala 35:29]
    node c_comb_13 = _c_comb_13_T_3 @[pp_compressor3_2.scala 25:22 31:19]
    node c_comb_12 = _c_comb_12_T_3 @[pp_compressor3_2.scala 25:22 31:19]
    node output_C_hi_hi_lo = cat(c_comb_13, c_comb_12) @[pp_compressor3_2.scala 35:29]
    node c_comb_15 = _c_comb_15_T_3 @[pp_compressor3_2.scala 25:22 31:19]
    node c_comb_14 = _c_comb_14_T_3 @[pp_compressor3_2.scala 25:22 31:19]
    node output_C_hi_hi_hi = cat(c_comb_15, c_comb_14) @[pp_compressor3_2.scala 35:29]
    node output_C_hi_hi = cat(output_C_hi_hi_hi, output_C_hi_hi_lo) @[pp_compressor3_2.scala 35:29]
    node output_C_hi = cat(output_C_hi_hi, output_C_hi_lo) @[pp_compressor3_2.scala 35:29]
    node _output_C_T = cat(output_C_hi, output_C_lo) @[pp_compressor3_2.scala 35:29]
    node _output_C_T_1 = bits(_output_C_T, 14, 0) @[pp_compressor3_2.scala 35:36]
    node _output_C_T_2 = cat(_output_C_T_1, UInt<1>("h0")) @[Cat.scala 33:92]
    output_S <= _output_S_T @[pp_compressor3_2.scala 34:14]
    output_C <= _output_C_T_2 @[pp_compressor3_2.scala 35:14]

  module wallaceTree :
    input clock : Clock
    input reset : UInt<1>
    input io_data_i_0 : UInt<16>
    input io_data_i_1 : UInt<16>
    input io_data_i_2 : UInt<16>
    input io_data_i_3 : UInt<16>
    input io_data_i_4 : UInt<16>
    output io_data_o : UInt<16>

    inst rca of RCA @[wallace_tree.scala 13:19]
    inst layer1CSA_0 of pp_compressor3_2 @[wallace_tree.scala 59:44]
    inst layer2CSA_0 of pp_compressor3_2 @[wallace_tree.scala 85:46]
    inst layer3CSA_0 of pp_compressor3_2 @[wallace_tree.scala 111:48]
    node _rca_in_WIRE_0 = UInt<16>("h0") @[wallace_tree.scala 52:{32,32}]
    node _rca_in_WIRE_1 = UInt<16>("h0") @[wallace_tree.scala 52:{32,32}]
    node l3_csa_os_0 = layer3CSA_0.output_S
    node l3_csa_out_0 = l3_csa_os_0
    node rca_in_0 = l3_csa_out_0
    node l3_csa_oc_0 = layer3CSA_0.output_C
    node l3_csa_out_1 = l3_csa_oc_0
    node rca_in_1 = l3_csa_out_1
    node _l1_csa_in_WIRE_0 = UInt<16>("h0") @[wallace_tree.scala 55:{36,36}]
    node _l1_csa_in_WIRE_1 = UInt<16>("h0") @[wallace_tree.scala 55:{36,36}]
    node _l1_csa_in_WIRE_2 = UInt<16>("h0") @[wallace_tree.scala 55:{36,36}]
    node l1_csa_in_0 = io_data_i_0
    node l1_csa_in_1 = io_data_i_1
    node l1_csa_in_2 = io_data_i_2
    node _l1_csa_os_WIRE_0 = UInt<16>("h0") @[wallace_tree.scala 56:{36,36}]
    node l1_csa_os_0 = layer1CSA_0.output_S
    node _l1_csa_oc_WIRE_0 = UInt<16>("h0") @[wallace_tree.scala 57:{36,36}]
    node l1_csa_oc_0 = layer1CSA_0.output_C
    node _l1_csa_out_WIRE_0 = UInt<16>("h0") @[wallace_tree.scala 58:{36,36}]
    node _l1_csa_out_WIRE_1 = UInt<16>("h0") @[wallace_tree.scala 58:{36,36}]
    node _l1_csa_out_WIRE_2 = UInt<16>("h0") @[wallace_tree.scala 58:{36,36}]
    node _l1_csa_out_WIRE_3 = UInt<16>("h0") @[wallace_tree.scala 58:{36,36}]
    node l1_csa_out_0 = l1_csa_os_0
    node l1_csa_out_1 = l1_csa_oc_0
    node l1_csa_out_2 = io_data_i_3
    node l1_csa_out_3 = io_data_i_4
    node _l2_csa_in_WIRE_0 = UInt<16>("h0") @[wallace_tree.scala 81:{37,37}]
    node _l2_csa_in_WIRE_1 = UInt<16>("h0") @[wallace_tree.scala 81:{37,37}]
    node _l2_csa_in_WIRE_2 = UInt<16>("h0") @[wallace_tree.scala 81:{37,37}]
    node l2_csa_in_0 = l1_csa_out_0
    node l2_csa_in_1 = l1_csa_out_1
    node l2_csa_in_2 = l1_csa_out_2
    node _l2_csa_os_WIRE_0 = UInt<16>("h0") @[wallace_tree.scala 82:{37,37}]
    node l2_csa_os_0 = layer2CSA_0.output_S
    node _l2_csa_oc_WIRE_0 = UInt<16>("h0") @[wallace_tree.scala 83:{37,37}]
    node l2_csa_oc_0 = layer2CSA_0.output_C
    node _l2_csa_out_WIRE_0 = UInt<16>("h0") @[wallace_tree.scala 84:{38,38}]
    node _l2_csa_out_WIRE_1 = UInt<16>("h0") @[wallace_tree.scala 84:{38,38}]
    node _l2_csa_out_WIRE_2 = UInt<16>("h0") @[wallace_tree.scala 84:{38,38}]
    node l2_csa_out_0 = l2_csa_os_0
    node l2_csa_out_1 = l2_csa_oc_0
    node l2_csa_out_2 = l1_csa_out_3
    node _l3_csa_in_WIRE_0 = UInt<16>("h0") @[wallace_tree.scala 107:{39,39}]
    node _l3_csa_in_WIRE_1 = UInt<16>("h0") @[wallace_tree.scala 107:{39,39}]
    node _l3_csa_in_WIRE_2 = UInt<16>("h0") @[wallace_tree.scala 107:{39,39}]
    node l3_csa_in_0 = l2_csa_out_0
    node l3_csa_in_1 = l2_csa_out_1
    node l3_csa_in_2 = l2_csa_out_2
    node _l3_csa_os_WIRE_0 = UInt<16>("h0") @[wallace_tree.scala 108:{39,39}]
    node _l3_csa_oc_WIRE_0 = UInt<16>("h0") @[wallace_tree.scala 109:{39,39}]
    node _l3_csa_out_WIRE_0 = UInt<16>("h0") @[wallace_tree.scala 110:{40,40}]
    node _l3_csa_out_WIRE_1 = UInt<16>("h0") @[wallace_tree.scala 110:{40,40}]
    io_data_o <= rca.output_S @[wallace_tree.scala 253:18]
    rca.clock <= clock
    rca.reset <= reset
    rca.input_a_in <= rca_in_0 @[wallace_tree.scala 250:18]
    rca.input_b_in <= rca_in_1 @[wallace_tree.scala 251:18]
    rca.input_c_in <= UInt<1>("h0") @[wallace_tree.scala 252:18]
    layer1CSA_0.clock <= clock
    layer1CSA_0.reset <= reset
    layer1CSA_0.input_pp0_in <= l1_csa_in_0 @[wallace_tree.scala 63:31]
    layer1CSA_0.input_pp1_in <= l1_csa_in_1 @[wallace_tree.scala 64:31]
    layer1CSA_0.input_pp2_in <= l1_csa_in_2 @[wallace_tree.scala 65:31]
    layer2CSA_0.clock <= clock
    layer2CSA_0.reset <= reset
    layer2CSA_0.input_pp0_in <= l2_csa_in_0 @[wallace_tree.scala 89:33]
    layer2CSA_0.input_pp1_in <= l2_csa_in_1 @[wallace_tree.scala 90:33]
    layer2CSA_0.input_pp2_in <= l2_csa_in_2 @[wallace_tree.scala 91:33]
    layer3CSA_0.clock <= clock
    layer3CSA_0.reset <= reset
    layer3CSA_0.input_pp0_in <= l3_csa_in_0 @[wallace_tree.scala 115:35]
    layer3CSA_0.input_pp1_in <= l3_csa_in_1 @[wallace_tree.scala 116:35]
    layer3CSA_0.input_pp2_in <= l3_csa_in_2 @[wallace_tree.scala 117:35]
