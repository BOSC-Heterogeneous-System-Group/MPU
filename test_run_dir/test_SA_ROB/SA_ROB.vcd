$date
2023-12-15T07:33+0000
$end
$version
0.2
$end
$comment

$end
$timescale 1ns  $end
$scope module SA_ROB $end
 $var wire 1 ! io_out_valid $end
 $var wire 1 " deq $end
 $var wire 64 # io_out_bits $end
 $var wire 2 $ io_out_valid_hi $end
 $var wire 6 % minMask_2_3 $end
 $var wire 6 & minMask $end
 $var wire 1 ' reset $end
 $var wire 64 ( io_data_1 $end
 $var wire 6 ) io_MatchVec_3 $end
 $var wire 64 * io_data_0 $end
 $var wire 64 + io_data_3 $end
 $var wire 64 , io_data_2 $end
 $var wire 6 - io_MatchVec_0 $end
 $var wire 6 . io_MatchVec_1 $end
 $var wire 6 / io_MatchVec_2 $end
 $var wire 1 0 io_out_ready $end
 $var wire 64 1 mem_3 $end
 $var wire 64 2 mem_2 $end
 $var wire 64 3 mem_1 $end
 $var wire 64 4 mem_0 $end
 $var wire 2 5 deq_lo $end
 $var wire 64 6 deqData $end
 $var wire 2 7 minIndex $end
 $var wire 6 8 matchVecMask_1 $end
 $var wire 6 9 matchVecMask_0 $end
 $var wire 6 : matchVecMask_3 $end
 $var wire 6 ; matchVecMask_2 $end
 $var wire 6 < minMask_0_1 $end
 $var wire 1 = clock $end
 $var wire 2 > io_out_valid_lo $end
 $var wire 6 ? matchVecReg_3 $end
 $var wire 6 @ matchVecReg_2 $end
 $var wire 2 A deq_hi $end
 $var wire 6 B matchVecReg_1 $end
 $var wire 6 C matchVecReg_0 $end
$upscope $end
$enddefinitions $end
$dumpvars
00
b00 7
b0000000000000000000000000000000000000000000000000000000000000000 6
b000000 9
b000000 8
b000000 ;
b000000 :
b000000 <
b000000 /
b0000000000000000000000000000000000000000000000000000000000000000 1
b000000 .
b00 5
b0000000000000000000000000000000000000000000000000000000000000000 4
0=
b0000000000000000000000000000000000000000000000000000000000000000 2
b0000000000000000000000000000000000000000000000000000000000000000 3
b0000000000000000000000000000000000000000000000000000000000000000 (
b000000 &
b000000 )
b0000000000000000000000000000000000000000000000000000000000000000 ,
b0000000000000000000000000000000000000000000000000000000000000000 *
b000000 -
b0000000000000000000000000000000000000000000000000000000000000000 +
b00 $
b000000 %
b0000000000000000000000000000000000000000000000000000000000000000 #
0!
0"
0'
b00 A
b000000 ?
b00 >
b000000 @
b000000 C
b000000 B
$end
#0
1'
b11 7
#1
b111111 %
b111111 &
b111111 8
b111111 9
b111111 :
b111111 ;
b111111 <
1=
#6
10
0'
b0000000000000000000000000000000000000000000000000000000000000010 (
b0000000000000000000000000000000000000000000000000000000000000001 *
b0000000000000000000000000000000000000000000000000000000000000100 +
b0000000000000000000000000000000000000000000000000000000000000011 ,
0=
b000001 .
#11
1!
1"
b000001 B
b0000000000000000000000000000000000000000000000000000000000000010 #
b000001 &
b0000000000000000000000000000000000000000000000000000000000000100 1
b0000000000000000000000000000000000000000000000000000000000000011 2
b0000000000000000000000000000000000000000000000000000000000000010 3
b0000000000000000000000000000000000000000000000000000000000000001 4
b10 5
b0000000000000000000000000000000000000000000000000000000000000010 6
b01 7
b000001 8
b000001 <
1=
b10 >
#16
b0000000000000000000000000000000000000000000000000000000000000000 (
b0000000000000000000000000000000000000000000000000000000000000000 *
b0000000000000000000000000000000000000000000000000000000000000000 +
b0000000000000000000000000000000000000000000000000000000000000000 ,
0=
b000000 .
#21
0!
0"
b000000 B
b0000000000000000000000000000000000000000000000000000000000000000 #
b111111 &
b0000000000000000000000000000000000000000000000000000000000000000 1
b0000000000000000000000000000000000000000000000000000000000000000 2
b0000000000000000000000000000000000000000000000000000000000000000 3
b0000000000000000000000000000000000000000000000000000000000000000 4
b00 5
b0000000000000000000000000000000000000000000000000000000000000000 6
b11 7
b111111 8
b111111 <
1=
b00 >
#26
0=
#31
1=
#36
b0000000000000000000000000000000000000000000000000000000000000110 (
b000010 )
b0000000000000000000000000000000000000000000000000000000000000101 *
b0000000000000000000000000000000000000000000000000000000000001000 +
b0000000000000000000000000000000000000000000000000000000000000111 ,
b000001 -
0=
b000100 /
#41
b000100 @
1!
b11 A
1"
b0000000000000000000000000000000000000000000000000000000000000101 #
b000001 C
b11 $
b000010 %
b000001 &
b0000000000000000000000000000000000000000000000000000000000001000 1
b0000000000000000000000000000000000000000000000000000000000000111 2
b0000000000000000000000000000000000000000000000000000000000000110 3
b0000000000000000000000000000000000000000000000000000000000000101 4
b01 5
b0000000000000000000000000000000000000000000000000000000000000101 6
b00 7
b000001 9
b000010 :
b000100 ;
b000001 <
1=
b01 >
b000010 ?
#46
b0000000000000000000000000000000000000000000000000000000000000000 (
b000000 )
b0000000000000000000000000000000000000000000000000000000000000000 *
b0000000000000000000000000000000000000000000000000000000000000000 +
b0000000000000000000000000000000000000000000000000000000000000000 ,
b000000 -
0=
b000000 /
#51
b0000000000000000000000000000000000000000000000000000000000001000 #
b000000 C
b000010 &
b0000000000000000000000000000000000000000000000000000000000000000 3
b0000000000000000000000000000000000000000000000000000000000000000 4
b00 5
b0000000000000000000000000000000000000000000000000000000000001000 6
b11 7
b111111 9
b111111 <
1=
b00 >
#56
0=
#61
b0000000000000000000000000000000000000000000000000000000000000000 1
b01 A
b0000000000000000000000000000000000000000000000000000000000000111 #
b01 $
b000100 %
b000100 &
b0000000000000000000000000000000000000000000000000000000000000111 6
b10 7
b111111 :
1=
b000000 ?
#66
0=
#71
b000000 @
0!
b00 A
0"
b0000000000000000000000000000000000000000000000000000000000000000 #
b00 $
b111111 %
b111111 &
b0000000000000000000000000000000000000000000000000000000000000000 2
b0000000000000000000000000000000000000000000000000000000000000000 6
b11 7
b111111 ;
1=
#76
0=
#81
1=
#86
0=
#91
1=
#96
00
0=
